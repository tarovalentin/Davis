(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    282248,       6786]
NotebookOptionsPosition[    270634,       6610]
NotebookOutlinePosition[    271037,       6626]
CellTagsIndexPosition[    270994,       6623]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", "\"\<g[z,x]\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Users\\\\tarob\\\\OneDrive\\\\Dokumenter\\\\Taro \
PC\\\\Documents\\\\Davis\\\\PhD\\\\Mathematica\>\"", "]"}], 
  ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.8538529554120483`*^9, 3.853853032108821*^9}, {
   3.8538530792998667`*^9, 3.8538531150099297`*^9}, {3.853853577921075*^9, 
   3.853853615535232*^9}, {3.8538538718123293`*^9, 3.853853902408115*^9}, {
   3.853854042136059*^9, 3.8538540495216026`*^9}, {3.853854080635096*^9, 
   3.8538540822076063`*^9}, 3.8538545582302337`*^9, {3.8538562039673376`*^9, 
   3.853856212658513*^9}, 3.853856378868222*^9, 3.853856498543808*^9, {
   3.8538567566106205`*^9, 3.8538567889313974`*^9}, {3.8538570070350347`*^9, 
   3.853857058094799*^9}, {3.8538570997794*^9, 3.853857106023793*^9}, {
   3.853857391122585*^9, 3.8538574315151806`*^9}, {3.8538574624884033`*^9, 
   3.8538574938380947`*^9}, {3.853857530309456*^9, 3.8538575355566015`*^9}, {
   3.8538575756864734`*^9, 3.853857587980259*^9}, {3.853857680176156*^9, 
   3.853857710267579*^9}, {3.8538673219405994`*^9, 3.8538673330828876`*^9}, {
   3.8538687027917185`*^9, 3.853868702992693*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"a1ccc12c-1b13-4f9e-9e3d-0d5465cf02be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coord", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "y", ",", "x"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metric", " ", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"4", 
         RowBox[{"\[Rho]", "^", "2"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "\[Rho]"}], "-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[Phi]2", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"1", "/", "\[Rho]"}], "+", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[Phi]2", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "]"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "=", " ", 
   RowBox[{"And", "[", 
    RowBox[{
     RowBox[{"z", "\[Element]", "Reals"}], ",", 
     RowBox[{"x1", "\[Element]", "Reals"}], ",", 
     RowBox[{"x2", "\[Element]", "Reals"}], ",", 
     RowBox[{"x1", ">", "0"}], ",", 
     RowBox[{"x2", ">", "0"}], ",", 
     RowBox[{"z", ">", "0"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", 
   RowBox[{
    RowBox[{"Length", "[", "coord", "]"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalLambda]", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"d", 
      RowBox[{"(", 
       RowBox[{"d", "-", "1"}], ")"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metricsign", "=", 
   RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "diffgeo.m"}]}], "Input",
 CellChangeTimes->{{3.8538529554120483`*^9, 3.853853032108821*^9}, {
   3.8538530792998667`*^9, 3.8538531150099297`*^9}, {3.853853577921075*^9, 
   3.853853615535232*^9}, {3.8538538718123293`*^9, 3.853853902408115*^9}, {
   3.853854042136059*^9, 3.8538540495216026`*^9}, {3.853854080635096*^9, 
   3.8538540822076063`*^9}, 3.8538545582302337`*^9, {3.8538562039673376`*^9, 
   3.853856212658513*^9}, 3.853856378868222*^9, 3.853856498543808*^9, {
   3.8538567566106205`*^9, 3.8538567889313974`*^9}, {3.8538570070350347`*^9, 
   3.853857058094799*^9}, {3.8538570997794*^9, 3.853857106023793*^9}, {
   3.853857391122585*^9, 3.8538574315151806`*^9}, {3.8538574624884033`*^9, 
   3.8538574938380947`*^9}, {3.853857530309456*^9, 3.8538575355566015`*^9}, {
   3.8538575756864734`*^9, 3.853857587980259*^9}, {3.853857680176156*^9, 
   3.853857710267579*^9}, {3.8538577942630363`*^9, 3.8538578329003024`*^9}, {
   3.8538578845135756`*^9, 3.853857904639359*^9}, {3.8538579701504574`*^9, 
   3.8538579744345803`*^9}, {3.853858268960385*^9, 3.8538583053054333`*^9}, {
   3.853859211279194*^9, 3.853859223409227*^9}, {3.853859274437168*^9, 
   3.853859287192679*^9}, {3.853859341640568*^9, 3.853859378352085*^9}, {
   3.853859446876879*^9, 3.8538595447260323`*^9}, {3.853861325021694*^9, 
   3.8538613252935324`*^9}, {3.85386551657747*^9, 3.853865552680418*^9}, {
   3.8538674239841366`*^9, 3.8538674641978664`*^9}, 3.8538674945983033`*^9, {
   3.8538687814947968`*^9, 3.8538687843537407`*^9}, {3.853869011886811*^9, 
   3.8538690218122644`*^9}, {3.853869159209941*^9, 3.8538691658641043`*^9}, {
   3.8538692332691755`*^9, 3.8538692388988466`*^9}, {3.85386953432876*^9, 
   3.8538695425030217`*^9}, {3.853870029308385*^9, 3.853870035722905*^9}, {
   3.853870718783789*^9, 3.8538707188826213`*^9}, {3.853954691172776*^9, 
   3.8539547869293575`*^9}, {3.8539548803252926`*^9, 3.853954886272238*^9}, {
   3.853955387948435*^9, 3.853955392559477*^9}, {3.8539613573266497`*^9, 
   3.853961400837676*^9}, 3.8539617368306704`*^9, 3.8539618128269844`*^9, {
   3.8539618573093047`*^9, 3.8539618869156003`*^9}, {3.8539625341613617`*^9, 
   3.85396255516816*^9}, {3.853962694628763*^9, 3.853962710204878*^9}, 
   3.8539627706585045`*^9, {3.8539643933515882`*^9, 3.8539644357622037`*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"61acca56-fe1b-4a25-8768-bd03b74ddba6"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8538592622733803`*^9, 
  3.8538592634575453`*^9}},ExpressionUUID->"24ddad0f-35ee-4ff4-947d-\
fc9c5b9ad2db"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", " ", "=", " ", 
  RowBox[{"RicciTensor", "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{"B", " ", "=", " ", 
  RowBox[{
   RowBox[{"d", " ", "metric"}], "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.853853132957733*^9, 3.853853144804098*^9}, {
   3.853854055250037*^9, 3.853854055944537*^9}, {3.8538575904898396`*^9, 
   3.8538575918123446`*^9}, {3.8538579493509245`*^9, 3.853857958172589*^9}, {
   3.8538581595761204`*^9, 3.853858165162869*^9}, {3.8538582031491685`*^9, 
   3.8538582505534573`*^9}, {3.853859233747101*^9, 3.8538592394417915`*^9}, {
   3.853868788675125*^9, 3.8538687907924*^9}, {3.853869118776487*^9, 
   3.853869138857109*^9}, {3.853869178090623*^9, 3.85386922868141*^9}, {
   3.853869552612239*^9, 3.853869594525643*^9}, {3.8538696520038376`*^9, 
   3.8538696999913597`*^9}, {3.853869735866893*^9, 3.8538697389132895`*^9}, {
   3.8538699380268116`*^9, 3.8538699404604363`*^9}, {3.853870041078347*^9, 
   3.8538700598589945`*^9}, {3.853870102439573*^9, 3.853870109134034*^9}, {
   3.8538703116347466`*^9, 3.853870320822236*^9}, {3.8538705960709314`*^9, 
   3.853870639707429*^9}, {3.8538708383468795`*^9, 3.853870860084645*^9}, {
   3.8538711701297398`*^9, 3.8538712073647413`*^9}, {3.853874384967634*^9, 
   3.853874422225009*^9}, {3.8538748156089067`*^9, 3.8538748160376573`*^9}, {
   3.8538748512924037`*^9, 3.853874855267598*^9}, {3.8539547740730667`*^9, 
   3.853954777977003*^9}, 3.8539548619802303`*^9},
 CellLabel->
  "In[244]:=",ExpressionUUID->"98fceca0-b793-48bc-ba5b-9d7946ed6a98"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Phi]2", "[", 
               RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Phi]2", "[", 
               RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
          "2"]}]]}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Phi]2", "[", 
               RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
          "2"]}]]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Phi]2", "[", 
               RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
          "2"]}]]}], 
      FractionBox[
       RowBox[{"4", "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}]], " ", 
         SuperscriptBox["\[Rho]", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y"}], "]"}], "2"]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Phi]2", "[", 
              RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y"}], "]"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", 
         SuperscriptBox["\[Rho]", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}]], " ", 
         SuperscriptBox["\[Rho]", "3"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}]}], 
       RowBox[{"2", " ", "\[Rho]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[Phi]2", "[", 
              RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
         "2"]}]], "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Phi]2", "[", 
               RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
          "2"]}]]}], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"4", "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            RowBox[{"\[Phi]2", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}]], " ", 
          SuperscriptBox["\[Rho]", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]], " ", 
          SuperscriptBox["\[Rho]", "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]2", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"x", ",", "y"}], "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]], " ", 
          SuperscriptBox["\[Rho]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Phi]2", "[", 
               RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]], " ", 
          SuperscriptBox["\[Rho]", "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Phi]2", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"x", ",", "y"}], "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]], " ", 
          SuperscriptBox["\[Rho]", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            RowBox[{"\[Phi]2", "[", 
             RowBox[{"x", ",", "y"}], "]"}]}]], " ", 
          SuperscriptBox["\[Rho]", "3"], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], 
        RowBox[{"2", " ", "\[Rho]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Phi]2", "[", 
               RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
          "2"]}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.853954774381606*^9, 3.853954789618101*^9}, {
   3.8539548638130426`*^9, 3.8539548895971484`*^9}, 3.8539554223847265`*^9, 
   3.853961895572344*^9, 3.8539625602258573`*^9, 3.8539627143091063`*^9, 
   3.8539627735212374`*^9, 3.8539644005384183`*^9, 3.853964439885414*^9, 
   3.853964631871178*^9},
 CellLabel->
  "Out[244]//MatrixForm=",ExpressionUUID->"1e7a61f6-5143-4909-8bca-\
74ec8a78dd99"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Rho]", "2"]}]], "0", "0"},
     {"0", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}]]}], "-", 
         FractionBox["1", "\[Rho]"]}], ")"}]}], "0"},
     {"0", "0", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], "+", 
         FractionBox["1", "\[Rho]"]}], ")"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.853954774381606*^9, 3.853954789618101*^9}, {
   3.8539548638130426`*^9, 3.8539548895971484`*^9}, 3.8539554223847265`*^9, 
   3.853961895572344*^9, 3.8539625602258573`*^9, 3.8539627143091063`*^9, 
   3.8539627735212374`*^9, 3.8539644005384183`*^9, 3.853964439885414*^9, 
   3.853964631871178*^9},
 CellLabel->
  "Out[245]//MatrixForm=",ExpressionUUID->"db08004c-f3c9-4eab-a6f6-\
25648d7102a6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"4", "+", 
     RowBox[{"8", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"\[Phi]2", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}]], " ", 
      SuperscriptBox["\[Rho]", "2"]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "y"}], "]"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]2", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}], "2"]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "y"}], "]"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]2", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "y"}], "]"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]2", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "y"}], "]"}]], " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]2", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"\[Phi]2", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}]], " ", 
      SuperscriptBox["\[Rho]", "3"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]2", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}]}]}], 
    RowBox[{"2", " ", "\[Rho]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]2", "[", 
           RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], "2"]}]],
    "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]2", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "-", 
      FractionBox["1", "\[Rho]"]}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8539644767217274`*^9, 3.8539644857651253`*^9}, {
  3.8539646362724204`*^9, 3.8539646447243366`*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"0b69bb5d-5a62-40b7-bb03-985a9ef3562d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Phi]2", "[", 
      RowBox[{"x", ",", "y"}], "]"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Phi]2", "[", 
             RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
        "2"]}], "-", 
      RowBox[{"\[Rho]", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]2", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "y"}], "]"}], "2"]}], "+", 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"\[Phi]2", "[", 
                 RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], 
            " ", 
            RowBox[{
             SuperscriptBox["\[Phi]2", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"0", ",", "2"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y"}], "]"}], "2"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[Phi]2", "[", 
               RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]2", "[", 
          RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], ")"}], "2"]}]], 
  "//.", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Phi]2", "[", 
       RowBox[{"x", ",", "y"}], "]"}]], " ", "\[Rho]"}]}], "\[Rule]", "g"}]}]],\
 "Input",
 CellChangeTimes->{{3.8539646576027117`*^9, 3.8539646669317036`*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"c58b5e9b-f458-4b41-90fc-b253c0906cf0"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Phi]2", "[", 
     RowBox[{"x", ",", "y"}], "]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["g", "2"]}], "-", 
     RowBox[{"\[Rho]", " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Phi]2", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}], "2"]}], "+", 
     RowBox[{"\[Rho]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}], "2"], "+", 
        RowBox[{"g", " ", 
         RowBox[{
          SuperscriptBox["\[Phi]2", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox["g", "2"]}]]], "Output",
 CellChangeTimes->{3.853964667163901*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"cae07221-ddb6-40b7-833f-273548706378"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Phi]1", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "4"], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Rho]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"\[Phi]2", "[", 
         RowBox[{"x", ",", "y"}], "]"}], "2"]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Rho]", " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]1", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox["\[Rho]", "3"], " ", 
          SuperscriptBox[
           RowBox[{"\[Phi]2", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "2"]}]}], ")"}], "2"]}]]}], "+", 
   FractionBox["1", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Rho]", "2"]}]]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.853955453750757*^9, 3.8539554707725973`*^9}, {
   3.8539626123167443`*^9, 3.8539626184451604`*^9}, {3.8539626493537855`*^9, 
   3.853962662307582*^9}, {3.853962733480852*^9, 3.853962741100504*^9}, 
   3.853962780623087*^9},
 CellLabel->
  "In[221]:=",ExpressionUUID->"40f6b6e7-7acf-45b2-9d09-5e9bd412335b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[Phi]2", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"\[Phi]1", "[", 
            RowBox[{"x", ",", "y"}], "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox["\[Rho]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"\[Phi]2", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "2"]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[Phi]1", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "2"], "-", 
           RowBox[{
            SuperscriptBox["\[Rho]", "2"], " ", 
            SuperscriptBox[
             RowBox[{"\[Phi]2", "[", 
              RowBox[{"x", ",", "y"}], "]"}], "2"]}]}], ")"}], "2"]}]], ",", 
      "\[Rho]"}], "]"}], ",", "\[Rho]"}], "]"}], "//", "FullSimplify"}]], \
"Input",
 CellChangeTimes->{{3.853962794441986*^9, 3.8539628187989907`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"a441ec07-1d2a-4187-9d20-47cfd5f1b190"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"\[Phi]2", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Phi]1", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "4"], "+", 
     RowBox[{"6", " ", 
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]1", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox["\[Rho]", "4"], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "4"]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Phi]1", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "2"], "-", 
     RowBox[{
      SuperscriptBox["\[Rho]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"\[Phi]2", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "2"]}]}], ")"}], "4"]]], "Output",
 CellChangeTimes->{{3.8539628033372965`*^9, 3.853962819184287*^9}},
 CellLabel->
  "Out[223]=",ExpressionUUID->"38aff5b7-53b6-4d66-8998-614913019e6a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["\[Phi]1", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], ","}]], "Input",
 CellChangeTimes->{{3.853955480898782*^9, 3.8539554866712556`*^9}, 
   3.8539619140562143`*^9},ExpressionUUID->"70f59824-e685-4bc0-b444-\
c257245789b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Phi]1", "[", 
      RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"]}]], "Input",
 CellChangeTimes->{{3.8539549031323547`*^9, 3.8539549161410255`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"2e950d96-9552-42cc-bf63-838219f7e074"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Phi]1", "[", 
      RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8539549165898743`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"7a54e72c-3f17-47c0-9a69-a2cded3bc8ff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[Phi]1", "[", 
       RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]1", "[", 
          RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
      RowBox[{
       SuperscriptBox["\[Phi]1", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}], "+", 
      RowBox[{
       SuperscriptBox["\[Phi]1", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[133]:=",ExpressionUUID->"1d33d96f-0ae7-452d-8738-84d5d067d073"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "\[Equal]", "0"}]], "Input",
 CellChangeTimes->{{3.8539549777935996`*^9, 3.8539549790458794`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"00a549cb-73a4-48b9-b973-1d9fe1ae43a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "\[Equal]", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Phi]1", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}], ",", "y"}], 
      "]"}], "+", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Phi]1", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], ",", "x"}], 
      "]"}]}], ")"}]}], "\[Equal]", "0"}]}], "Input",
 CellChangeTimes->{{3.8539551597421913`*^9, 3.8539551645596647`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"3f384cdc-d9a3-42d0-bc1e-d75a0df555de"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.853955165547267*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"f34d1828-3d3c-4cc5-aa34-59ce9ce8b9f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]1", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]1", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.8539551655636506`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"84817ae0-bd13-464a-9cbf-f02a146f7a86"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["\[Phi]1", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Phi]1", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "\[Equal]", "0"}], "}"}], 
   ",", 
   RowBox[{"\[Phi]1", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8539551787164507`*^9, 3.8539551882350206`*^9}, {
  3.853955268788367*^9, 3.853955276625848*^9}, {3.853955495096201*^9, 
  3.8539555104931107`*^9}},
 NumberMarks->False,
 CellLabel->
  "In[171]:=",ExpressionUUID->"3c9a587e-cc80-48a3-8512-f939f11a12e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Phi]1", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "\[Rule]"}], "}"}], "}"}]], "Input",
 CellChangeTimes->{{3.8539613522979565`*^9, 
  3.853961352303646*^9}},ExpressionUUID->"745ae190-ce58-45e4-be17-\
69163292ca2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8539553201552505`*^9, 3.8539553452497377`*^9}},
 CellLabel->"",ExpressionUUID->"8d621d8a-b3f1-4e20-9d24-fb989a6935f6"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[Phi]", "[", 
         RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[Phi]", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.853955332516016*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"d94df5bb-c9eb-413c-8eb8-ed9471d37789"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{",", 
      RowBox[{
       RowBox[{"\[Phi]1", "[", 
        RowBox[{"0", ",", "0"}], "]"}], "\[Equal]", "0"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]1", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8539550554187155`*^9, 3.8539551583198967`*^9}},
 NumberMarks->False,ExpressionUUID->"1a62905b-771a-4b46-885e-21452330a40e"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Phi]1", "[", 
             RowBox[{"x", ",", "y"}], "]"}]]}], "\[Rho]"], "-", 
         RowBox[{
          SuperscriptBox["\[Phi]1", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}], "+", 
         RowBox[{
          SuperscriptBox["\[Phi]1", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]1", "[", 
       RowBox[{"0", ",", "0"}], "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]1", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.853954982287568*^9, 3.853954998604409*^9}, 
   3.8539550981486855`*^9, {3.853955137040109*^9, 3.853955152662029*^9}},
 CellLabel->
  "Out[142]=",ExpressionUUID->"34ed8ea6-8272-42ad-acbb-c46c56e0a097"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riemann", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.853870233546186*^9, 3.853870245318859*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9e5ee7e8-7fe0-40c4-b5ee-8fd5d2b98cb1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{"(", "\[NoBreak]", GridBox[{
                 {"0", "0", "0"},
                 {"0", "0", "0"},
                 {"0", "0", "0"}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}]},
             {
              RowBox[{"(", "\[NoBreak]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", GridBox[{
                 {"0", "0", "0"},
                 {"0", "0", "0"},
                 {"0", "0", "0"}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}]},
             {
              RowBox[{"(", "\[NoBreak]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[NoBreak]", ")"}], 
              RowBox[{"(", "\[NoBreak]", GridBox[{
                 {"0", "0", "0"},
                 {"0", "0", "0"},
                 {"0", "0", "0"}
                },
                
                GridBoxAlignment->{
                 "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.7]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], "\[NoBreak]", ")"}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49., {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{40., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 18, 
             33609492447785665065, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{24., {15.5, 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 18, 
             33609492447785665065, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{33., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 18, 
             33609492447785665065, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{60., {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{58.5, {1., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[33609492447785665065 === $SessionID, 
   Out[18], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{{3.853870238830995*^9, 3.85387024720539*^9}, 
   3.8538703286059823`*^9},
 CellLabel->
  "Out[18]//MatrixForm=",ExpressionUUID->"8c041b17-52ac-43cc-8cc2-\
ddd7ba70b61a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"display", "[", "Christoffel", "]"}]], "Input",
 CellChangeTimes->{{3.8538744669846425`*^9, 3.8538744788538027`*^9}, 
   3.8538745149411726`*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"edfd1065-7879-4cc0-b596-86ae47e111b8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"y", ",", "y", ",", "y"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["gxx", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "x", ",", "y"}], "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"gxx", "[", 
        RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"y", ",", "x", ",", "x"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["gyy", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "x", ",", "y"}], "]"}], 
       RowBox[{"2", " ", 
        RowBox[{"gxx", "[", 
         RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]]}]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "x"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"x", ",", "x", ",", "y"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["gyy", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "0", ",", "1"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "x", ",", "y"}], "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"gyy", "[", 
        RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"y", ",", "y", ",", "x"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"y", ",", "x", ",", "y"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["gxx", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "x", ",", "y"}], "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"gxx", "[", 
        RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "y"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["gxx", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "x", ",", "y"}], "]"}], 
       RowBox[{"2", " ", 
        RowBox[{"gyy", "[", 
         RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]]}]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"x", ",", "x", ",", "x"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["gyy", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "x", ",", "y"}], "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"gyy", "[", 
        RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"z", ",", "y", ",", "y"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{
       SuperscriptBox["gxx", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "y"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"y", ",", "y", ",", "z"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["gxx", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "x", ",", "y"}], "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"gxx", "[", 
        RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"z", ",", "x", ",", "x"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{
       SuperscriptBox["gyy", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]},
    {
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"x", ",", "z", ",", "x"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"x", ",", "x", ",", "z"}], "}"}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["gyy", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"z", ",", "x", ",", "y"}], "]"}], 
      RowBox[{"2", " ", 
       RowBox[{"gyy", "[", 
        RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> False, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.853874471954771*^9, 3.8538744791543016`*^9}, 
   3.8538745156968718`*^9, {3.8538748208533745`*^9, 3.8538748597355957`*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"49c04784-2b74-4a52-9955-3026e0cbefe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A", " ", "=", " ", 
  RowBox[{"RicciTensor", "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{"B", " ", "=", " ", 
  RowBox[{
   RowBox[{"d", " ", "metric"}], "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.8538534964706726`*^9, 3.8538535258623*^9}, {
   3.8538539062466073`*^9, 3.853853907760524*^9}, {3.853853953657547*^9, 
   3.853853964957726*^9}, {3.8538545278560286`*^9, 3.853854534506655*^9}, {
   3.8538546128204775`*^9, 3.85385462733304*^9}, {3.853854689950781*^9, 
   3.853854715934474*^9}, {3.8538548482483225`*^9, 3.853854863177018*^9}, 
   3.8538549007578306`*^9, 3.8538564368959484`*^9, {3.8538565997057095`*^9, 
   3.8538566029153805`*^9}, {3.8538570839471273`*^9, 3.853857128582944*^9}, {
   3.8538577354951534`*^9, 3.8538577359666586`*^9}, {3.853857925897784*^9, 
   3.8538579275312347`*^9}, {3.853857986445258*^9, 3.8538579869317317`*^9}, {
   3.8538593116439295`*^9, 3.853859315584079*^9}, {3.853865604669588*^9, 
   3.8538656048404164`*^9}, {3.853865645238757*^9, 3.853865650559832*^9}, {
   3.853866079169649*^9, 3.8538660845076694`*^9}, 3.8538700699237213`*^9, {
   3.8538706888534226`*^9, 3.85387069091872*^9}, 3.8538707833625264`*^9, {
   3.8538709090703745`*^9, 3.853870918074179*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"7679a9cb-afc1-4f32-bb57-251b0dc9bc54"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"], "-", 
        RowBox[{"2", " ", 
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"]}]], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"]}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"], "-", 
        RowBox[{
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g11", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"z", ",", "x", ",", "y"}], "]"}], "+", 
           RowBox[{
            SuperscriptBox["g11", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"z", ",", "x", ",", "y"}], "]"}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"g11", "[", 
           RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"]}]], "0"},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"]}]], "0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"], "-", 
        RowBox[{
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["g11", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "0", ",", "2"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"z", ",", "x", ",", "y"}], "]"}], "+", 
           RowBox[{
            SuperscriptBox["g11", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"z", ",", "x", ",", "y"}], "]"}]}], ")"}]}], "-", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"g11", "[", 
           RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["g11", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}]}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"g11", "[", 
          RowBox[{"z", ",", "x", ",", "y"}], "]"}], "2"]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8538545711723704`*^9, 3.8538545794813585`*^9}, {
   3.8538546152784214`*^9, 3.8538546276626315`*^9}, {3.853854690218751*^9, 
   3.8538547163606124`*^9}, 3.8538548223113728`*^9, {3.853854854788848*^9, 
   3.853854863796649*^9}, 3.853854901552757*^9, 3.8538549900972767`*^9, 
   3.853855063400348*^9, 3.85385535813964*^9, 3.853855458702572*^9, 
   3.8538562340543795`*^9, 3.8538563873502007`*^9, 3.8538564372982116`*^9, 
   3.8538565033442245`*^9, {3.853856600135361*^9, 3.8538566036874747`*^9}, 
   3.8538567987376857`*^9, 3.853857024727152*^9, {3.853857062079436*^9, 
   3.8538571394218035`*^9}, 3.8538574998646507`*^9, 3.853857544414939*^9, {
   3.853857578515455*^9, 3.8538576118217163`*^9}, {3.8538577202603583`*^9, 
   3.853857736289985*^9}, {3.8538579120153766`*^9, 3.853857928870884*^9}, {
   3.8538579824915657`*^9, 3.8538579875020523`*^9}, {3.8538582831009855`*^9, 
   3.853858310732413*^9}, {3.853859270254043*^9, 3.853859316570619*^9}, 
   3.853859384510903*^9, 3.853859559384879*^9, 3.8538655633508816`*^9, 
   3.853865605269492*^9, {3.8538656470952034`*^9, 3.8538656512485013`*^9}, 
   3.853866084897081*^9, 3.8538674713772173`*^9, 3.853867504772344*^9, 
   3.8538687944130516`*^9, {3.853869124544468*^9, 3.853869152835534*^9}, {
   3.8538692480302167`*^9, 3.8538692627217093`*^9}, 3.853869769324638*^9, 
   3.8538700224011974`*^9, 3.8538700673562775`*^9, 3.8538700980089417`*^9, 
   3.853870226483386*^9, 3.853870335542854*^9, {3.853870648561678*^9, 
   3.8538706600828323`*^9}, 3.8538706912305827`*^9, 3.853870723951979*^9, 
   3.8538707847258587`*^9, 3.8538708666185265`*^9, {3.853870909474516*^9, 
   3.853870918487345*^9}, {3.8538712116862593`*^9, 3.8538712170902205`*^9}, 
   3.853874446568222*^9},
 CellLabel->
  "Out[92]//MatrixForm=",ExpressionUUID->"1d0bb449-c856-45f3-8205-\
2e6a9e8ca64f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["2", "\[Rho]"], "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"g11", "[", 
         RowBox[{"z", ",", "x", ",", "y"}], "]"}]}], "\[Rho]"], "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"g11", "[", 
         RowBox[{"z", ",", "x", ",", "y"}], "]"}]}], "\[Rho]"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8538545711723704`*^9, 3.8538545794813585`*^9}, {
   3.8538546152784214`*^9, 3.8538546276626315`*^9}, {3.853854690218751*^9, 
   3.8538547163606124`*^9}, 3.8538548223113728`*^9, {3.853854854788848*^9, 
   3.853854863796649*^9}, 3.853854901552757*^9, 3.8538549900972767`*^9, 
   3.853855063400348*^9, 3.85385535813964*^9, 3.853855458702572*^9, 
   3.8538562340543795`*^9, 3.8538563873502007`*^9, 3.8538564372982116`*^9, 
   3.8538565033442245`*^9, {3.853856600135361*^9, 3.8538566036874747`*^9}, 
   3.8538567987376857`*^9, 3.853857024727152*^9, {3.853857062079436*^9, 
   3.8538571394218035`*^9}, 3.8538574998646507`*^9, 3.853857544414939*^9, {
   3.853857578515455*^9, 3.8538576118217163`*^9}, {3.8538577202603583`*^9, 
   3.853857736289985*^9}, {3.8538579120153766`*^9, 3.853857928870884*^9}, {
   3.8538579824915657`*^9, 3.8538579875020523`*^9}, {3.8538582831009855`*^9, 
   3.853858310732413*^9}, {3.853859270254043*^9, 3.853859316570619*^9}, 
   3.853859384510903*^9, 3.853859559384879*^9, 3.8538655633508816`*^9, 
   3.853865605269492*^9, {3.8538656470952034`*^9, 3.8538656512485013`*^9}, 
   3.853866084897081*^9, 3.8538674713772173`*^9, 3.853867504772344*^9, 
   3.8538687944130516`*^9, {3.853869124544468*^9, 3.853869152835534*^9}, {
   3.8538692480302167`*^9, 3.8538692627217093`*^9}, 3.853869769324638*^9, 
   3.8538700224011974`*^9, 3.8538700673562775`*^9, 3.8538700980089417`*^9, 
   3.853870226483386*^9, 3.853870335542854*^9, {3.853870648561678*^9, 
   3.8538706600828323`*^9}, 3.8538706912305827`*^9, 3.853870723951979*^9, 
   3.8538707847258587`*^9, 3.8538708666185265`*^9, {3.853870909474516*^9, 
   3.853870918487345*^9}, {3.8538712116862593`*^9, 3.8538712170902205`*^9}, 
   3.853874446568222*^9},
 CellLabel->
  "Out[93]//MatrixForm=",ExpressionUUID->"ace9d086-8d81-419d-9e8f-\
2eebaf4447a2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"A", "+", "B"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8538709205113907`*^9, 3.853870950724015*^9}, {
  3.853870989694358*^9, 3.8538709899002075`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"60089554-3383-450c-a63e-487fd1fbe2e3"],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", 
        FractionBox["2", 
         SuperscriptBox["z", "2"]]}], "0", "0"},
      {"0", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Phi]", "[", 
             RowBox[{"y", ",", "x"}], "]"}]]}], 
          SuperscriptBox["z", "2"]]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"y", ",", "x"}], "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"y", ",", "x"}], "]"}]}]}], "0"},
      {"0", "0", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[Phi]", "[", 
             RowBox[{"y", ",", "x"}], "]"}]]}], 
          SuperscriptBox["z", "2"]]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "2"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"y", ",", "x"}], "]"}]}], "-", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"2", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"y", ",", "x"}], "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "+", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox["2", 
        SuperscriptBox["z", "2"]], "0", "0"},
      {"0", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]", "[", 
           RowBox[{"y", ",", "x"}], "]"}]]}], 
        SuperscriptBox["z", "2"]], "0"},
      {"0", "0", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[Phi]", "[", 
           RowBox[{"y", ",", "x"}], "]"}]]}], 
        SuperscriptBox["z", "2"]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{3.853871013802167*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"72f75b3b-c33a-4397-be8a-a40a59ff243d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"y", ",", "x"}], "]"}]]}], 
     SuperscriptBox["z", "2"]]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"y", ",", "x"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"y", ",", "x"}], "]"}]}]}], "==", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"y", ",", "x"}], "]"}]]}], 
   SuperscriptBox["z", "2"]]}]], "Input",
 CellChangeTimes->{{3.853871004579417*^9, 3.853871109330573*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"f973df57-891f-4255-926a-453a21ef40aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"y", ",", "x"}], "]"}]]}], 
     SuperscriptBox["z", "2"]]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "2"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"y", ",", "x"}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"2", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"y", ",", "x"}], "]"}]}]}], "\[Equal]", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"y", ",", "x"}], "]"}]]}], 
   SuperscriptBox["z", "2"]]}]], "Output",
 CellChangeTimes->{{3.8538710563316193`*^9, 3.853871110139229*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"e47904dd-3820-4e3c-8650-46e63f1c4b21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", "[", 
          RowBox[{"y", ",", "x"}], "]"}]]}], 
       SuperscriptBox["z", "2"]]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"y", ",", "x"}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"y", ",", "x"}], "]"}]}]}], "\[Equal]", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"y", ",", "x"}], "]"}]]}], 
     SuperscriptBox["z", "2"]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"y", ",", "x"}], "]"}], ",", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"y", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[68]:=",ExpressionUUID->"313470ed-70ce-48ba-8ff2-65b7039ff550"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[Phi]", "[", 
          RowBox[{"y", ",", "x"}], "]"}]]}], 
       SuperscriptBox["z", "2"]]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"0", ",", "2"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"y", ",", "x"}], "]"}]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"2", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"y", ",", "x"}], "]"}]}]}], "\[Equal]", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[Phi]", "[", 
        RowBox[{"y", ",", "x"}], "]"}]]}], 
     SuperscriptBox["z", "2"]]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"y", ",", "x"}], "]"}], ",", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"y", ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.853871111764409*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"6d6f8eb6-099e-49ed-b999-bb7e0fe03296"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"h", "[", "x", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"], " ", 
        RowBox[{"g2", "[", "x", "]"}]}], "+", 
       RowBox[{"h", "[", "x", "]"}]}], ")"}]}], 
    RowBox[{
     SuperscriptBox["z", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["z", "2"], " ", 
        RowBox[{"g2", "[", "x", "]"}]}], "+", 
       RowBox[{"h", "[", "x", "]"}]}], ")"}]}]]}], "==", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"g2", "[", "x", "]"}], "+", 
    FractionBox[
     RowBox[{"h", "[", "x", "]"}], 
     SuperscriptBox["z", "2"]]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    SuperscriptBox["z", "2"]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["z", "2"], " ", 
    SuperscriptBox[
     RowBox[{"g2", "[", "x", "]"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["z", "2"], " ", 
       RowBox[{"g2", "[", "x", "]"}]}], "+", 
      RowBox[{"h", "[", "x", "]"}]}], ")"}], "2"]], "+", 
  FractionBox["1", 
   SuperscriptBox["z", "2"]]}]}], "Input",
 CellChangeTimes->{{3.853866543336546*^9, 3.853866543906136*^9}, {
  3.8538675247260942`*^9, 3.853867536991039*^9}, {3.8538675671843224`*^9, 
  3.853867641363248*^9}},
 CellLabel->
  "In[1129]:=",ExpressionUUID->"062dceb7-c623-47f2-9e45-6d70e6e1df28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"h", "[", "x", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["z", "2"], " ", 
        RowBox[{"g2", "[", "x", "]"}]}], "+", 
       RowBox[{"h", "[", "x", "]"}]}], ")"}]}], 
    RowBox[{
     SuperscriptBox["z", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["z", "2"], " ", 
        RowBox[{"g2", "[", "x", "]"}]}], "+", 
       RowBox[{"h", "[", "x", "]"}]}], ")"}]}]]}], "+", 
  RowBox[{"g2", "[", "x", "]"}], "+", 
  FractionBox[
   RowBox[{"h", "[", "x", "]"}], 
   SuperscriptBox["z", "2"]]}]], "Input",
 CellChangeTimes->{{3.8538676824658146`*^9, 3.853867685257482*^9}},
 CellLabel->
  "In[1131]:=",ExpressionUUID->"861f8b4e-38b0-463a-a5e2-4cd3749ccdd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "[", "x", "]"}], "+", 
  FractionBox[
   RowBox[{"h", "[", "x", "]"}], 
   SuperscriptBox["z", "2"]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"h", "[", "x", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["z", "2"], " ", 
       RowBox[{"g2", "[", "x", "]"}]}], "+", 
      RowBox[{"h", "[", "x", "]"}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["z", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["z", "2"], " ", 
       RowBox[{"g2", "[", "x", "]"}]}], "+", 
      RowBox[{"h", "[", "x", "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.8538665519473643`*^9, 3.8538675615520616`*^9, 
  3.8538676420174875`*^9, 3.8538676857773113`*^9},
 CellLabel->
  "Out[1131]=",ExpressionUUID->"64645241-3647-4d48-9397-188fef8fc14a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"d", "-", "2"}], ")"}]}], 
  RowBox[{"(", 
   RowBox[{"RicciTensor", "-", 
    RowBox[{
     FractionBox["RicciScalar", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"d", "-", "1"}], ")"}]}]], " ", "metric"}]}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.853858008099907*^9, 3.853858079191946*^9}},
 CellLabel->
  "In[949]:=",ExpressionUUID->"9ab29bdd-f4c7-4913-b61c-5c5772534524"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"z_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"h", "[", "x", "]"}], "+", 
   RowBox[{"z", " ", 
    RowBox[{"g1", "[", "x", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8538666260792346`*^9, 3.8538666260792346`*^9}, {
   3.8538666905836678`*^9, 3.853866693058202*^9}, {3.8538667291274595`*^9, 
   3.8538667347018504`*^9}, 3.8538667870790615`*^9},
 CellLabel->
  "In[1089]:=",ExpressionUUID->"4114f0fe-5587-4e3c-a645-9fa66b0921c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"g", "[", 
           RowBox[{"z", ",", "x"}], "]"}]}], 
         SuperscriptBox["z", "2"]]}], "+", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x"}], "]"}]}], "z"], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x"}], "]"}], "2"], 
        RowBox[{"g", "[", 
         RowBox[{"z", ",", "x"}], "]"}]], "-", 
       RowBox[{"2", " ", 
        RowBox[{
         SuperscriptBox["g", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "x"}], "]"}]}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"g", "[", 
       RowBox[{"z", ",", "x"}], "]"}]}], 
     SuperscriptBox["z", "2"]]}], "//", "FullSimplify"}], "//", 
  "Expand"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["4", 
         SuperscriptBox["z", "2"]]}], "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["g", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"z", ",", "x"}], "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"g", "[", 
          RowBox[{"z", ",", "x"}], "]"}], "2"]], "+", 
       FractionBox[
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{
            SuperscriptBox["g", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"z", ",", "x"}], "]"}]}], "z"], "-", 
         RowBox[{"2", " ", 
          RowBox[{
           SuperscriptBox["g", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"2", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"z", ",", "x"}], "]"}]}]}], 
        RowBox[{"g", "[", 
         RowBox[{"z", ",", "x"}], "]"}]]}], ")"}]}], "+", 
    FractionBox["1", 
     SuperscriptBox["z", "2"]]}], "//", "FullSimplify"}], "//", 
  "Expand"}]}], "Input",
 CellChangeTimes->{{3.8538666289216576`*^9, 3.853866702088382*^9}, {
  3.85386674874959*^9, 3.853866749746868*^9}, {3.853866823290227*^9, 
  3.8538668801679444`*^9}, {3.853866911710032*^9, 3.853866926582652*^9}, {
  3.8538669626055236`*^9, 3.853866969812146*^9}},
 CellLabel->
  "In[1021]:=",ExpressionUUID->"1fc751a4-86f6-492c-a611-8fad977c7601"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"g1", "[", "x", "]"}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g1", "[", "x", "]"}], "+", 
      RowBox[{"z", " ", 
       RowBox[{"h", "[", "x", "]"}]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"z", "^", "2"}], " ", 
    SuperscriptBox[
     RowBox[{"g1", "[", "x", "]"}], "2"]}], 
   RowBox[{"4", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g1", "[", "x", "]"}], "+", 
       RowBox[{"z", " ", 
        RowBox[{"h", "[", "x", "]"}]}]}], ")"}], "^", "2"}]}]]}]], "Input",
 CellChangeTimes->{{3.853867034628111*^9, 3.8538670744283533`*^9}, 
   3.853867117532996*^9, {3.853867149481203*^9, 3.853867149878213*^9}},
 CellLabel->
  "In[1028]:=",ExpressionUUID->"a85d3820-ecc6-4fe8-b7f1-dbf8b6d08748"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["z", "2"], " ", 
    SuperscriptBox[
     RowBox[{"g1", "[", "x", "]"}], "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g1", "[", "x", "]"}], "+", 
       RowBox[{"z", " ", 
        RowBox[{"h", "[", "x", "]"}]}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"g1", "[", "x", "]"}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g1", "[", "x", "]"}], "+", 
      RowBox[{"z", " ", 
       RowBox[{"h", "[", "x", "]"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.853867150422262*^9},
 CellLabel->
  "Out[1028]=",ExpressionUUID->"edebf269-ed17-431b-b63a-ea12a20cd704"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"g1", "[", "x", "]"}], "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g1", "[", "x", "]"}], "+", 
        RowBox[{"z", " ", 
         RowBox[{"h", "[", "x", "]"}]}]}], ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{"g1", "[", "x", "]"}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g1", "[", "x", "]"}], "+", 
       RowBox[{"z", " ", 
        RowBox[{"h", "[", "x", "]"}]}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{"z", " ", 
     RowBox[{"g1", "[", "x", "]"}], " ", 
     RowBox[{"h", "[", "x", "]"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g1", "[", "x", "]"}], "+", 
        RowBox[{"z", " ", 
         RowBox[{"h", "[", "x", "]"}]}]}], ")"}], "2"]}]]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.853867108845829*^9, 3.853867156268664*^9}},
 CellLabel->
  "In[1029]:=",ExpressionUUID->"ffcba2f7-888e-43dc-ad6f-b5edb3a045b5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.853867131297505*^9, 3.853867156612277*^9}},
 CellLabel->
  "Out[1029]=",ExpressionUUID->"216953a9-6892-4af8-a8c2-aecc1fbc0422"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.853866717178983*^9, 3.853866718981335*^9}, 
   3.85386675497441*^9},ExpressionUUID->"0896f9e5-617a-4f60-96d1-\
5324fe418b4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{
    RowBox[{"-", "a"}], ",", 
    RowBox[{"-", "b"}]}], "]"}], " ", 
  RowBox[{"v", "[", "b", "]"}]}]], "Input",
 CellChangeTimes->{{3.853875526337493*^9, 3.853875526337493*^9}, 
   3.8538755643653526`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"28990a1e-3489-4b1d-84dc-40ad69dd0b6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{
    RowBox[{"-", "a"}], ",", 
    RowBox[{"-", "b"}]}], "]"}], " ", 
  RowBox[{"v", "[", "b", "]"}]}]], "Output",
 CellChangeTimes->{{3.853875528124954*^9, 3.853875577791651*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"00ce64ed-1b32-492c-bc66-fcb6b8c8c706"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "xAct`xTensor`"}]], "Input",
 CellChangeTimes->{{3.853875711277525*^9, 3.853875711277525*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a329ae0a-b4cd-4893-8a95-5aa43a1e565b"],

Cell[CellGroupData[{

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.8538757123180037`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"a60b5cd0-3c82-41fb-be6a-cd76ab25e7a5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xPerm`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.3\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2015", ",", "8", ",", "23"}], "}"}]}],
  SequenceForm["Package xAct`xPerm`  version ", "1.2.3", ", ", {2015, 8, 23}],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757123473063`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"b6c14aa5-cf89-4a83-a7ea-96987d69c788"],

Cell[BoxData["\<\"CopyRight (C) 2003-2020, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{3.8538757123556013`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"464b0845-b103-4370-afda-08ccee65fe41"],

Cell[BoxData["\<\"Connecting to external MinGW executable...\"\>"], "Print",
 CellChangeTimes->{3.8538757123824797`*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"3b5db491-5923-48c0-ae45-1a0cd217d48e"],

Cell[BoxData["\<\"Connection established.\"\>"], "Print",
 CellChangeTimes->{3.853875712484002*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"8eb9341d-d72f-4079-9f89-d5e7539f9c00"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.853875712484002*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"b7386585-b9d2-4525-9c39-497d17477271"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Package xAct`xTensor`  version \"\>", 
   "\[InvisibleSpace]", "\<\"1.2.0\"\>", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2021", ",", "10", ",", "17"}], "}"}]}],
  SequenceForm[
  "Package xAct`xTensor`  version ", "1.2.0", ", ", {2021, 10, 17}],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875712491065*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"bc7848b7-020c-4ce4-8035-37ffc05409fb"],

Cell[BoxData["\<\"CopyRight (C) 2002-2021, Jose M. Martin-Garcia, under the \
General Public License.\"\>"], "Print",
 CellChangeTimes->{3.853875712495771*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"bc9e2177-776c-416d-8c07-833a4d0aa581"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.853875712558422*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"2e527c9b-b5bb-42f9-8b9b-c83347c7baaa"],

Cell[BoxData["\<\"These packages come with ABSOLUTELY NO WARRANTY; for \
details type Disclaimer[]. This is free software, and you are welcome to \
redistribute it under certain conditions. See the General Public License for \
details.\"\>"], "Print",
 CellChangeTimes->{3.853875712559033*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"19c23f4c-f724-4ca3-abdc-b60a650a8314"],

Cell[BoxData["\<\"------------------------------------------------------------\
\"\>"], "Print",
 CellChangeTimes->{3.853875712565858*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"c056e5f6-b154-421a-9d34-96b37b9d257a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DefTensor", "[", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], ",", "M3", ",", 
   RowBox[{"Antisymmetric", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "a"}], ",", 
      RowBox[{"-", "b"}]}], "}"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"DefTensor", "[", 
  RowBox[{
   RowBox[{"v", "[", "a", "]"}], ",", "M3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.853875541313612*^9, 3.85387555428452*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"3fd7a72a-e2a5-4f51-97fe-cbb5890aa691"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"F", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tensor ", 
   $CellContext`F[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757364761457`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"605dc754-9c1b-49c4-81d3-c0481c02aceb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"v", "[", "a", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "tensor ", 
   $CellContext`v[$CellContext`a], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757364761457`*^9},
 CellLabel->
  "During evaluation of \
In[16]:=",ExpressionUUID->"4f54252b-8749-4604-a50f-82d9384a341a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefManifold", "[", 
  RowBox[{"M3", ",", "3", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8538755717252445`*^9, 3.853875572623012*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"a0f12ab9-6a72-4ecf-8ff3-2b6562339a44"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefManifold", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"manifold \"\>", "\[InvisibleSpace]", "M3", 
   "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefManifold, ": Defining ", 
   "manifold ", $CellContext`M3, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757342703266`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"788e773e-51b0-4331-80f5-79ec2bdc36f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefVBundle", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"vbundle \"\>", "\[InvisibleSpace]", "TangentM3", 
   "\[InvisibleSpace]", "\<\". \"\>", "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefVBundle, ": Defining ", 
   "vbundle ", $CellContext`TangentM3, ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757342866516`*^9},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"e5f491f9-917f-49e6-94f8-af70678d47c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{
    RowBox[{"-", "a"}], ",", 
    RowBox[{"-", "b"}]}], "]"}], " ", 
  RowBox[{"v", "[", "b", "]"}]}]], "Input",
 CellChangeTimes->{{3.8538757562192183`*^9, 3.8538757562192183`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"e25d7bad-f606-4d53-a092-67485a002b50"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   StyleBox[GridBox[{
      {"F", 
       StyleBox[GridBox[{
          {" ", " "},
          {"a", "b"}
         },
         GridBoxSpacings->{"Columns" -> {
             Offset[0.], {
              Offset[0.034999999999999996`]}, 
             Offset[0.]}, "Rows" -> {{
              Offset[0.]}}}],
        FontSize->Rational[39, 4]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.034999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    ShowAutoStyles->False,
    AutoSpacing->False],
   $CellContext`F[-$CellContext`a, -$CellContext`b],
   Editable->False], " ", 
  InterpretationBox[
   StyleBox[GridBox[{
      {"v", 
       StyleBox[GridBox[{
          {"b"},
          {" "}
         },
         GridBoxSpacings->{"Columns" -> {
             Offset[0.], {
              Offset[0.034999999999999996`]}, 
             Offset[0.]}, "Rows" -> {{
              Offset[0.]}}}],
        FontSize->Rational[39, 4]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.034999999999999996`]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    ShowAutoStyles->False,
    AutoSpacing->False],
   $CellContext`v[$CellContext`b],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.8538757571744766`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4af05470-e437-4f86-b9d9-ac21aea095d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DefMetric"}]], "Input",
 CellChangeTimes->{{3.853875865345491*^9, 3.8538758688302937`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"9cb19218-c53b-4dc0-985f-295cc6c511b8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DefMetric[signdet, metric[-a,-b], covd, covdsymbol] \
defines metric[-a, -b] with signdet 1 or -1 and associates the covariant \
derivative covd[-a] to it.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DefMetric", "[", "]"}], ":=", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DefMetric", "::", "argm"}], "MessageName"], ",", 
                    "DefMetric", ",", "0", ",", "2"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DefMetric", "[", 
                    
                    RowBox[{
                    "xAct`xTensor`Private`signdet_", ",", 
                    "xAct`xTensor`Private`metric_", ",", 
                    "xAct`xTensor`Private`covd_", ",", 
                    RowBox[{"xAct`xTensor`Private`covdsymbol", ":", 
                    RowBox[{"{", 
                    RowBox[{"_String", ",", "_String"}], "}"}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"DefMetric", "[", 
                    
                    RowBox[{
                    "xAct`xTensor`Private`signdet", ",", 
                    "xAct`xTensor`Private`metric", ",", 
                    "xAct`xTensor`Private`covd", ",", 
                    
                    RowBox[{
                    "SymbolOfCovD", "\[Rule]", 
                    "xAct`xTensor`Private`covdsymbol"}], ",", 
                    "xAct`xTensor`Private`options"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DefMetric", "[", 
                    RowBox[{"xAct`xTensor`Private`signdet_", ",", 
                    RowBox[{"xAct`xTensor`Private`metric_", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`ind1_"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2_"}]}], "]"}], ",",
                     "xAct`xTensor`Private`covd_", ",", 
                    RowBox[{"xAct`xTensor`Private`options", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`vbundle", "=", 
                    
                    RowBox[{"VBundleOfIndex", "[", 
                    "xAct`xTensor`Private`ind1", "]"}]}], "}"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`tangentmetricQ", ",", 
                    "xAct`xTensor`Private`covdsymbol", ",", 
                    "xAct`xTensor`Private`flat", ",", 
                    "xAct`xTensor`Private`inducedfrom", ",", 
                    "xAct`xTensor`Private`confto", ",", 
                    "xAct`xTensor`Private`odeps", ",", 
                    "xAct`xTensor`Private`wwb", ",", 
                    "xAct`xTensor`Private`eoib", ",", 
                    "xAct`xTensor`Private`pns", ",", 
                    "xAct`xTensor`Private`info", ",", 
                    "xAct`xTensor`Private`flatPD", ",", 
                    "xAct`xTensor`Private`inducedQ", ",", 
                    "xAct`xTensor`Private`dim", ",", 
                    "xAct`xTensor`Private`integerdimQ", ",", 
                    "xAct`xTensor`Private`frozenQ", ",", 
                    "xAct`xTensor`Private`firstQ", ",", 
                    "xAct`xTensor`Private`invertQ", ",", 
                    "xAct`xTensor`Private`firstmetric", ",", 
                    "xAct`xTensor`Private`supermetric", ",", 
                    "xAct`xTensor`Private`vector", ",", 
                    "xAct`xTensor`Private`LCmetric"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`covdsymbol", ",", 
                    "xAct`xTensor`Private`flat", ",", 
                    "xAct`xTensor`Private`inducedfrom", ",", 
                    "xAct`xTensor`Private`confto", ",", 
                    "xAct`xTensor`Private`odeps", ",", 
                    "xAct`xTensor`Private`wwb", ",", 
                    "xAct`xTensor`Private`eoib", ",", 
                    "xAct`xTensor`Private`pns", ",", 
                    "xAct`xTensor`Private`info"}], "}"}], "=", 
                    RowBox[{"OptionValue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"DefMetric", ",", "DefCovD"}], "}"}], ",", 
                    RowBox[{"{", "xAct`xTensor`Private`options", "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"SymbolOfCovD", ",", "FlatMetric", ",", 
                    "InducedFrom", ",", "ConformalTo", ",", 
                    "OtherDependencies", ",", "WeightedWithBasis", ",", 
                    "epsilonOrientationInBasis", ",", "ProtectNewSymbol", ",",
                     "DefInfo"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`DefMetricCheck", "[", 
                    RowBox[{"xAct`xTensor`Private`signdet", ",", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`ind1"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2"}]}], "]"}], ",", 
                    "xAct`xTensor`Private`covd", ",", 
                    "xAct`xTensor`Private`covdsymbol", ",", 
                    "xAct`xTensor`Private`flat", ",", 
                    "xAct`xTensor`Private`inducedfrom", ",", 
                    "xAct`xTensor`Private`confto", ",", 
                    "xAct`xTensor`Private`odeps", ",", 
                    "xAct`xTensor`Private`wwb", ",", 
                    "xAct`xTensor`Private`eoib"}], "]"}], ";", 
                    RowBox[{"xAct`xTensor`Private`tangentmetricQ", "=", 
                    RowBox[{
                    RowBox[{"Tangent", "[", 
                    
                    RowBox[{"BaseOfVBundle", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}], "]"}], "===", 
                    "xAct`xTensor`Private`vbundle"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`flatPD", "=", 
                    RowBox[{"xAct`xTensor`Private`flat", "&&", 
                    RowBox[{"xAct`xTensor`Private`covd", "===", "PD"}]}]}], 
                    ";", 
                    RowBox[{"xAct`xTensor`Private`dim", "=", 
                    
                    RowBox[{"DimOfVBundle", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`integerdimQ", "=", 
                    
                    RowBox[{"IntegerQ", "[", "xAct`xTensor`Private`dim", 
                    "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`firstQ", "=", 
                    RowBox[{
                    
                    RowBox[{"MetricsOfVBundle", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}], "===", 
                    RowBox[{"{", "}"}]}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", "=", 
                    RowBox[{
                    RowBox[{"!", "xAct`xTensor`Private`firstQ"}], "&&", 
                    
                    RowBox[{"xAct`xTensor`Private`inducedfrom", "=!=", 
                    "Null"}]}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`frozenQ", "=", 
                    RowBox[{
                    RowBox[{"!", "xAct`xTensor`Private`firstQ"}], "&&", 
                    RowBox[{"!", "xAct`xTensor`Private`inducedQ"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`supermetric", ",", 
                    "xAct`xTensor`Private`vector"}], "}"}], "=", 
                    "xAct`xTensor`Private`inducedfrom"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`frozenQ", ",", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "=", 
                    RowBox[{"First", "[", 
                    
                    RowBox[{"MetricsOfVBundle", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}], "]"}]}]}], "]"}], 
                    ";", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`manifold", "=", 
                    
                    RowBox[{"BaseOfVBundle", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`deps", "=", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"BaseOfVBundle", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}], "}"}], "\[Union]", 
                    "xAct`xTensor`Private`odeps"}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`vbQ", "=", 
                    
                    RowBox[{"xAct`xTensor`Private`VBundleIndexQ", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`vbpmQ", "=", 
                    
                    RowBox[{"xAct`xTensor`Private`VBundleIndexPMQ", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`frozenQ", ",", 
                    RowBox[{"GiveSymbol", "[", 
                    RowBox[{"Inv", ",", "xAct`xTensor`Private`metric"}], 
                    "]"}], ",", "xAct`xTensor`Private`metric"}], "]"}]}]}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Off", "[", 
                    StyleBox[
                    RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], 
                    "]"}], ";", 
                    RowBox[{"DefTensor", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`ind1"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2"}]}], "]"}], ",", 
                    "xAct`xTensor`Private`deps", ",", 
                    RowBox[{"Symmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
                    RowBox[{"ProtectNewSymbol", "\[Rule]", "False"}], ",", 
                    RowBox[{"OrthogonalTo", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`vector", "[", 
                    "xAct`xTensor`Private`ind1", "]"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    RowBox[{"DefInfo", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`info", "===", "False"}], 
                    ",", "False", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"symmetric metric tensor\"", ",", "\"\""}], 
                    "}"}]}], "]"}]}], ",", "xAct`xTensor`Private`options"}], 
                    "]"}], ";", 
                    RowBox[{"MakexTensions", "[", 
                    
                    RowBox[{"DefMetric", ",", "\"Beginning\"", ",", 
                    "xAct`xTensor`Private`signdet", ",", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`ind1"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2"}]}], "]"}], ",", 
                    "xAct`xTensor`Private`covd", ",", 
                    "xAct`xTensor`Private`options"}], "]"}], ";", 
                    RowBox[{"AppendToUnevaluated", "[", 
                    RowBox[{"$Metrics", ",", "xAct`xTensor`Private`metric"}], 
                    "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"MetricQ", "[", "xAct`xTensor`Private`metric", 
                    "]"}], "^=", "True"}], ";", 
                    RowBox[{
                    
                    RowBox[{"CovDOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], "^=", 
                    "xAct`xTensor`Private`covd"}], ";", 
                    RowBox[{
                    
                    RowBox[{"VBundleOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], "^=", 
                    "xAct`xTensor`Private`vbundle"}], ";", 
                    RowBox[{"xUpAppendTo", "[", 
                    RowBox[{
                    
                    RowBox[{"MetricsOfVBundle", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}], ",", 
                    "xAct`xTensor`Private`metric"}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"FlatMetricQ", "[", "xAct`xTensor`Private`metric",
                     "]"}], "^=", "xAct`xTensor`Private`flat"}], ";", 
                    RowBox[{
                    
                    RowBox[{"InducedFrom", "[", "xAct`xTensor`Private`metric",
                     "]"}], "^=", "xAct`xTensor`Private`inducedfrom"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"Head", "[", "xAct`xTensor`Private`signdet", 
                    "]"}], "===", "List"}], "&&", 
                    RowBox[{
                    
                    RowBox[{"Length", "[", "xAct`xTensor`Private`signdet", 
                    "]"}], "===", "3"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"SignatureOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], "^=", 
                    "xAct`xTensor`Private`signdet"}], ";", 
                    RowBox[{
                    
                    RowBox[{"SignDetOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], "^=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`signdet", 
                    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
                    "===", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    
                    RowBox[{"xAct`xTensor`Private`signdet", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]], 
                    ",", "0"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"SignDetOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], "^=", 
                    "xAct`xTensor`Private`signdet"}], ";"}]}], "]"}], ";", 
                    RowBox[{"xAct`xTensor`Private`invertQ", "=", 
                    RowBox[{
                    
                    RowBox[{"SignDetOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], "=!=", "0"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`invertQ", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`frozenQ", ",", 
                    RowBox[{"DefTensor", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`ind1", ",", 
                    "xAct`xTensor`Private`ind2"}], "]"}], ",", 
                    "xAct`xTensor`Private`deps", ",", 
                    RowBox[{"Symmetric", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
                    RowBox[{"ProtectNewSymbol", "\[Rule]", "False"}], ",", 
                    
                    RowBox[{"Master", "\[Rule]", 
                    "xAct`xTensor`Private`metric"}], ",", 
                    RowBox[{"DefInfo", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`info", "===", "False"}], 
                    ",", "False", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"inverse metric tensor\"", ",", 
                    "\"Metric is frozen!\""}], "}"}]}], "]"}]}], ",", 
                    RowBox[{"TensorID", "\[Rule]", 
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`InvMetric", ",", 
                    "xAct`xTensor`Private`metric"}], "}"}]}], ",", 
                    RowBox[{"PrintAs", "\[RuleDelayed]", 
                    RowBox[{"GiveOutputString", "[", 
                    RowBox[{"Inv", ",", "xAct`xTensor`Private`metric"}], 
                    "]"}]}], ",", "xAct`xTensor`Private`options"}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Inv", "[", "xAct`xTensor`Private`metric", "]"}], 
                    "^=", "xAct`xTensor`Private`metric"}]}], "]"}], ",", 
                    
                    RowBox[{"Print", "[", 
                    "\"** DefMetric: non-invertible metric being defined! \
Dangerous!\"", "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`firstQ", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"Dir", "[", "xAct`xTensor`Private`expr_", "]"}], 
                    ",", "xAct`xTensor`Private`b_"}], "]"}], ":=", 
                    RowBox[{"ReplaceIndex", "[", 
                    RowBox[{"xAct`xTensor`Private`expr", ",", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`UltraindexOf", "[", 
                    "xAct`xTensor`Private`expr", "]"}], "\[Rule]", 
                    "xAct`xTensor`Private`b"}]}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`a_", ",", 
                    RowBox[{"Dir", "[", "xAct`xTensor`Private`expr_", "]"}]}],
                     "]"}], ":=", 
                    RowBox[{"ReplaceIndex", "[", 
                    RowBox[{"xAct`xTensor`Private`expr", ",", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`UltraindexOf", "[", 
                    "xAct`xTensor`Private`expr", "]"}], "\[Rule]", 
                    "xAct`xTensor`Private`a"}]}], "]"}]}], ";"}]}], "]"}], 
                    ";", 
                    RowBox[{"xAct`xTensor`Private`metric", "/:", 
                    RowBox[{"epsilonOrientation", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", ",", 
                    
                    RowBox[{"xAct`xTensor`Private`eoib", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "]"}], "=", 
                    
                    RowBox[{"xAct`xTensor`Private`eoib", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`epsilonname", "=", 
                    RowBox[{"GiveSymbol", "[", 
                    RowBox[{"epsilon", ",", "xAct`xTensor`Private`metric"}], 
                    "]"}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`inds", "=", 
                    RowBox[{"GetIndicesOfVBundle", "[", 
                    RowBox[{"xAct`xTensor`Private`vbundle", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`integerdimQ", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"xAct`xTensor`Private`dim", "-", "1"}], ",", 
                    "xAct`xTensor`Private`dim"}], "]"}], ",", "2"}], "]"}]}], 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"DefTensor", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`epsilonname", "@@", 
                    
                    RowBox[{"ChangeIndex", "/@", 
                    "xAct`xTensor`Private`inds"}]}], ",", 
                    "xAct`xTensor`Private`deps", ",", 
                    RowBox[{"Antisymmetric", "[", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "xAct`xTensor`Private`inds", "]"}],
                     "]"}], "]"}], ",", 
                    RowBox[{"PrintAs", "\[RuleDelayed]", 
                    RowBox[{"GiveOutputString", "[", 
                    RowBox[{"epsilon", ",", "xAct`xTensor`Private`metric"}], 
                    "]"}]}], ",", 
                    RowBox[{"ProtectNewSymbol", "\[Rule]", "False"}], ",", 
                    
                    RowBox[{"Master", "\[Rule]", 
                    "xAct`xTensor`Private`metric"}], ",", 
                    RowBox[{"OrthogonalTo", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`vector", "[", 
                    RowBox[{"First", "[", "xAct`xTensor`Private`inds", "]"}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ProjectedWith", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    
                    RowBox[{"DummyIn", "[", "xAct`xTensor`Private`vbundle", 
                    "]"}]}], ",", 
                    RowBox[{
                    "First", "[", "xAct`xTensor`Private`inds", "]"}]}], "]"}],
                     "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    RowBox[{"DefInfo", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`info", "===", "False"}], 
                    ",", "False", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"antisymmetric tensor\"", ",", "\"\""}], 
                    "}"}]}], "]"}]}], ",", 
                    RowBox[{"TensorID", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"epsilon", ",", "xAct`xTensor`Private`metric"}], 
                    "}"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"!", "xAct`xTensor`Private`integerdimQ"}], "&&", 
                    RowBox[{"!", "xAct`xTensor`Private`inducedQ"}]}], ",", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`epsilonname", "/:", 
                    RowBox[{"SymmetryGroupOfTensor", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    "xAct`xTensor`Private`inds1__", "]"}], "]"}], ":=", 
                    RowBox[{"Antisymmetric", "[", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{"{", "xAct`xTensor`Private`inds1", "}"}], "]"}], 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "/:", 
                    
                    RowBox[{"SymmetryGroupOfTensor", "[", 
                    "xAct`xTensor`Private`epsilonname", "]"}], "=."}], ";", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "/:", 
                    
                    RowBox[{"SymmetryGroupOfTensor", "[", 
                    "xAct`xTensor`Private`epsilonname", "]"}], ":=", 
                    RowBox[{"Antisymmetric", "[", 
                    RowBox[{"Range", "[", 
                    
                    RowBox[{"DimOfVBundle", "[", 
                    "xAct`xTensor`Private`vbundle", "]"}], "]"}], "]"}]}]}]}],
                     "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`inducedQ", "||", 
                    "xAct`xTensor`Private`frozenQ"}], ",", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "/:", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    "xAct`xTensor`Private`inds1__", "]"}], " ", 
                    
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    "xAct`xTensor`Private`inds2__", "]"}]}], ":=", 
                    RowBox[{
                    
                    RowBox[{"SignDetOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], " ", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`expandGdelta", "[", 
                    "xAct`xTensor`Private`metric", "]"}], "[", 
                    
                    RowBox[{"xAct`xTensor`Private`inds1", ",", 
                    "xAct`xTensor`Private`inds2"}], "]"}]}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "/:", 
                    RowBox[{
                    RowBox[{
                    "xAct`xTensor`Private`epsilonname", "[", 
                    "xAct`xTensor`Private`inds1__", "]"}], " ", 
                    
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    "xAct`xTensor`Private`inds2__", "]"}]}], ":=", 
                    RowBox[{
                    
                    RowBox[{"SignDetOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], " ", 
                    RowBox[{"ExpandGdelta", "[", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"\[Delta]", 
                    StyleBox[
                    
                    GridBox[{{"xAct`xTensor`Private`inds1", 
                    "xAct`xTensor`Private`inds2"}, {" ", " "}}, RowSpacings -> 
                    0, ColumnSpacings -> 0.05, GridFrameMargins -> {{0, 0}, {
                    0, 0}}], FontSize -> Rational[39, 4]]}}, ColumnSpacings -> 
                    0.05, RowAlignments -> Center], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    xAct`xTensor`Gdelta[
                    xAct`xTensor`Private`inds1, xAct`xTensor`Private`inds2], 
                    Editable -> False], "]"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`tangentmetricQ", ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`frozenQ", ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`covd", "[", 
                    "xAct`xTensor`Private`a_", "]"}], "[", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], ".."}], "]"}], "]"}], 
                    "^=", "0"}], ",", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`covd", "[", 
                    "xAct`xTensor`Private`a_", "]"}], "[", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`b__", "?", 
                    "xAct`xTensor`Private`vbpmQ"}], "]"}], "]"}], "^=", 
                    "0"}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"TensorDerivative", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`epsilonname", ",", 
                    "xAct`xTensor`Private`covd", ",", "___"}], "]"}], ":=", 
                    "Zero"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "xAct`xTensor`Private`inducedQ"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "xAct`xTensor`Private`frozenQ"}], ",", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "/:", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    SubscriptBox["\[ScriptCapitalL]", 
                    RowBox[{"Short", "[", "xAct`xTensor`Private`v_", "]"}]], 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    RowBox[{"xAct`xTensor`Private`inds1__", "?", "UpIndexQ"}],
                     "]"}]}], AutoSpacing -> False, ShowAutoStyles -> False], 
                    xAct`xTensor`LieD[
                    Pattern[xAct`xTensor`Private`v, 
                    Blank[]]][
                    xAct`xTensor`Private`epsilonname[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`inds1, 
                    BlankSequence[]], xAct`xTensor`UpIndexQ]]], Editable -> 
                    False], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`dummy", "=", 
                    
                    RowBox[{"DummyIn", "[", "xAct`xTensor`Private`vbundle", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`covd", "[", 
                    RowBox[{"-", "xAct`xTensor`Private`dummy"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"ReplaceIndex", "[", 
                    RowBox[{"xAct`xTensor`Private`v", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`UltraindexOf", "[", 
                    "xAct`xTensor`Private`v", "]"}], "\[Rule]", 
                    "xAct`xTensor`Private`dummy"}], "}"}]}], "]"}], " ", 
                    
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    "xAct`xTensor`Private`inds1", "]"}]}], "]"}]}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "/:", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    SubscriptBox["\[ScriptCapitalL]", 
                    RowBox[{"Short", "[", "xAct`xTensor`Private`v_", "]"}]], 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`inds1__", "?", 
                    "DownIndexQ"}], "]"}]}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    xAct`xTensor`LieD[
                    Pattern[xAct`xTensor`Private`v, 
                    Blank[]]][
                    xAct`xTensor`Private`epsilonname[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`inds1, 
                    BlankSequence[]], xAct`xTensor`DownIndexQ]]], Editable -> 
                    False], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`dummy", "=", 
                    
                    RowBox[{"DummyIn", "[", "xAct`xTensor`Private`vbundle", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`covd", "[", 
                    RowBox[{"-", "xAct`xTensor`Private`dummy"}], "]"}], "[", 
                    RowBox[{
                    RowBox[{"ReplaceIndex", "[", 
                    RowBox[{"xAct`xTensor`Private`v", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`UltraindexOf", "[", 
                    "xAct`xTensor`Private`v", "]"}], "\[Rule]", 
                    "xAct`xTensor`Private`dummy"}], "}"}]}], "]"}], " ", 
                    
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    "xAct`xTensor`Private`inds1", "]"}]}], "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "/:", 
                    RowBox[{"TensorDerivative", "[", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", ",", 
                    RowBox[{"LieD", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`vhead_", "?", "xTensorQ"}], 
                    "[", "_", "]"}], "]"}]}], "]"}], ":=", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`dummy", "=", 
                    
                    RowBox[{"DummyIn", "[", "xAct`xTensor`Private`vbundle", 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"MultiplyHead", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TensorDerivative", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`vhead", ",", 
                    "xAct`xTensor`Private`covd"}], "]"}], "[", 
                    RowBox[{"xAct`xTensor`Private`dummy", ",", 
                    RowBox[{"-", "xAct`xTensor`Private`dummy"}]}], "]"}], ",",
                     "xAct`xTensor`Private`epsilonname"}], "]"}]}], "]"}]}], 
                    ";"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`dim", "===", "2"}], "&&", 
                    "xAct`xTensor`Private`firstQ"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a_", ",", 
                    "xAct`xTensor`Private`b_"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`c_", ",", 
                    "xAct`xTensor`Private`d_"}], "]"}]}], "^=", 
                    RowBox[{
                    
                    RowBox[{"SignDetOfMetric", "[", 
                    "xAct`xTensor`Private`metric", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`b", ",", 
                    "xAct`xTensor`Private`d"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`d"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`b", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}]}], ")"}]}]}], ";"}]}],
                     "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`dim", "\[Equal]", "4"}], 
                    ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`TetraName", "=", 
                    RowBox[{"GiveSymbol", "[", 
                    RowBox[{"Tetra", ",", "xAct`xTensor`Private`metric"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`i1", ",", 
                    "xAct`xTensor`Private`i2", ",", "xAct`xTensor`Private`i3",
                     ",", "xAct`xTensor`Private`i4"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`i1", ",", 
                    "xAct`xTensor`Private`i2", ",", "xAct`xTensor`Private`i3",
                     ",", "xAct`xTensor`Private`i4"}], "}"}], "=", 
                    RowBox[{"GetIndicesOfVBundle", "[", 
                    RowBox[{"xAct`xTensor`Private`vbundle", ",", "4"}], 
                    "]"}]}], ";", 
                    RowBox[{"DefTensor", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`TetraName", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`i1"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`i2"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`i3"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`i4"}]}], "]"}], ",", 
                    "xAct`xTensor`Private`deps", ",", 
                    RowBox[{"GenSet", "[", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", "1", ",", "2", ")"}], 
                    RowBox[{"(", "3", ",", "4", ")"}]}], AutoSpacing -> False,
                     ShowAutoStyles -> False], 
                    xAct`xPerm`Cycles[{1, 2}, {3, 4}], Editable -> False], 
                    ",", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    RowBox[{"(", "1", ",", "3", ")"}], 
                    RowBox[{"(", "2", ",", "4", ")"}]}], AutoSpacing -> False,
                     ShowAutoStyles -> False], 
                    xAct`xPerm`Cycles[{1, 3}, {2, 4}], Editable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Dagger", "\[Rule]", "Complex"}], ",", 
                    RowBox[{"PrintAs", "\[RuleDelayed]", 
                    RowBox[{"GiveOutputString", "[", 
                    RowBox[{"Tetra", ",", "xAct`xTensor`Private`metric"}], 
                    "]"}]}], ",", 
                    RowBox[{"Master", "\[Rule]", 
                    "xAct`xTensor`Private`metric"}], ",", 
                    RowBox[{"ProtectNewSymbol", "\[Rule]", "False"}], ",", 
                    RowBox[{"DefInfo", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`info", "===", "False"}], 
                    ",", "False", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"tetrametric\"", ",", "\"\""}], "}"}]}], 
                    "]"}]}]}], "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"TetraRule", "[", "xAct`xTensor`Private`metric", 
                    "]"}], "^:=", 
                    RowBox[{"MakeRule", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`TetraName", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i1", ",", 
                    "xAct`xTensor`Private`i2", ",", "xAct`xTensor`Private`i3",
                     ",", "xAct`xTensor`Private`i4"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
                    RowBox[{"epsilonOrientation", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", ",", "AIndex"}], 
                    "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`epsilonname", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i1", ",", 
                    "xAct`xTensor`Private`i2", ",", 
                    "xAct`xTensor`Private`i3", ",", 
                    "xAct`xTensor`Private`i4"}], "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i1", ",", 
                    "xAct`xTensor`Private`i4"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i2", ",", 
                    "xAct`xTensor`Private`i3"}], "]"}]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i1", ",", 
                    "xAct`xTensor`Private`i3"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i2", ",", 
                    "xAct`xTensor`Private`i4"}], "]"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i1", ",", 
                    "xAct`xTensor`Private`i2"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i3", ",", 
                    "xAct`xTensor`Private`i4"}], "]"}]}]}]}], "}"}], ",", 
                    RowBox[{"Evaluate", "\[Rule]", "True"}]}], "]"}]}], ";", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`TetraNamedag", "=", 
                    InterpretationBox[
                    StyleBox[
                    RowBox[{"Dagger", "[", "xAct`xTensor`Private`TetraName", 
                    "]"}], AutoSpacing -> False, ShowAutoStyles -> False], 
                    xAct`xTensor`Dagger[xAct`xTensor`Private`TetraName], 
                    Editable -> False]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`TetraNamedag", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i1_", ",", 
                    "xAct`xTensor`Private`i2_", ",", 
                    "xAct`xTensor`Private`i3_", ",", 
                    "xAct`xTensor`Private`i4_"}], "]"}], ":=", 
                    RowBox[{"xAct`xTensor`Private`TetraName", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`i1", ",", 
                    "xAct`xTensor`Private`i4", ",", "xAct`xTensor`Private`i3",
                     ",", "xAct`xTensor`Private`i2"}], "]"}]}]}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"$ProtectNewSymbols", ",", 
                    RowBox[{"Protect", "[", 
                    RowBox[{"xAct`xTensor`Private`TetraName", ",", 
                    RowBox[{"Evaluate", "[", 
                    InterpretationBox[
                    StyleBox[
                    
                    RowBox[{"Dagger", "[", "xAct`xTensor`Private`TetraName", 
                    "]"}], AutoSpacing -> False, ShowAutoStyles -> False], 
                    xAct`xTensor`Dagger[xAct`xTensor`Private`TetraName], 
                    Editable -> False], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"$ProtectNewSymbols", ",", 
                    
                    RowBox[{"Protect", "[", 
                    "xAct`xTensor`Private`epsilonname", "]"}]}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`frozenQ", ",", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`a_", ",", 
                    RowBox[{"-", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}]}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}], ",", 
                    "xAct`xTensor`Private`c_"}], "]"}]}], ":=", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], ",", 
                    "xAct`xTensor`Private`a_"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}], ",", 
                    "xAct`xTensor`Private`c_"}], "]"}]}], ":=", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`a_", ",", 
                    RowBox[{"-", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}]}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{"xAct`xTensor`Private`c_", ",", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}], 
                    "]"}]}], ":=", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], ",", 
                    "xAct`xTensor`Private`a_"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{"xAct`xTensor`Private`c_", ",", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}], 
                    "]"}]}], ":=", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`a_", ",", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}], 
                    ",", "xAct`xTensor`Private`c_"}], "]"}]}], ":=", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}], ",", 
                    "xAct`xTensor`Private`a_"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}], 
                    ",", "xAct`xTensor`Private`c_"}], "]"}]}], ":=", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`a_", ",", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{"xAct`xTensor`Private`c_", ",", 
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}]}], 
                    "]"}]}], ":=", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}], ",", 
                    "xAct`xTensor`Private`a_"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{"xAct`xTensor`Private`c_", ",", 
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}]}], 
                    "]"}]}], ":=", 
                    RowBox[{"xAct`xTensor`Private`firstmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`a_", "?", 
                    "xAct`xTensor`Private`vbQ"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`a_", "?", "EIndexQ"}]}]}], 
                    "]"}], ":=", 
                    RowBox[{"xAct`xTensor`Private`dim", "-", "1"}]}], ";", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    
                    RowBox[{"xAct`xTensor`Private`a_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`a_", "?", "EIndexQ"}]}], 
                    "]"}], ":=", 
                    RowBox[{"xAct`xTensor`Private`dim", "-", "1"}]}]}]}], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`firstQ", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`a_", "?", "UpIndexQ"}], ",", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "DownIndexQ"}]}], 
                    "]"}], ":=", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"\[Delta]", 
                    StyleBox[
                    
                    GridBox[{{"xAct`xTensor`Private`b", 
                    "xAct`xTensor`Private`a"}, {" ", " "}}, RowSpacings -> 0, 
                    ColumnSpacings -> 0.05, GridFrameMargins -> {{0, 0}, {0, 
                    0}}], FontSize -> Rational[39, 4]]}}, ColumnSpacings -> 
                    0.05, RowAlignments -> Center], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    xAct`xTensor`delta[
                    xAct`xTensor`Private`b, xAct`xTensor`Private`a], Editable -> 
                    False]}], ";", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`a_", "?", "DownIndexQ"}], 
                    ",", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "UpIndexQ"}]}], 
                    "]"}], ":=", 
                    InterpretationBox[
                    StyleBox[
                    GridBox[{{"\[Delta]", 
                    StyleBox[
                    
                    GridBox[{{"xAct`xTensor`Private`a", 
                    "xAct`xTensor`Private`b"}, {" ", " "}}, RowSpacings -> 0, 
                    ColumnSpacings -> 0.05, GridFrameMargins -> {{0, 0}, {0, 
                    0}}], FontSize -> Rational[39, 4]]}}, ColumnSpacings -> 
                    0.05, RowAlignments -> Center], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    xAct`xTensor`delta[
                    xAct`xTensor`Private`a, xAct`xTensor`Private`b], Editable -> 
                    False]}]}]}], "]"}], ";", 
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`a_", ",", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}], 
                    ",", "xAct`xTensor`Private`c_"}], "]"}]}], "]"}], "^:=", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`a_", ",", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`c_", ",", 
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}]}], 
                    "]"}]}], "]"}], "^:=", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}], ",", 
                    "xAct`xTensor`Private`a_"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}], 
                    ",", "xAct`xTensor`Private`c_"}], "]"}]}], "]"}], "^:=", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}], ",", 
                    "xAct`xTensor`Private`a_"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`c_", ",", 
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`b_", "?", "EIndexQ"}]}]}], 
                    "]"}]}], "]"}], "^:=", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`c"}], "]"}]}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`tangentmetricQ", ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`flatPD", ",", 
                    RowBox[{
                    
                    RowBox[{"Print", "[", 
                    "\"** DefMetric: Associating fiducial flat derivative PD \
to metric.\"", "]"}], ";", 
                    RowBox[{"Unprotect", "[", "PD", "]"}], ";", 
                    RowBox[{
                    RowBox[{"MetricOfCovD", "[", "PD", "]"}], "^=", 
                    "xAct`xTensor`Private`metric"}], ";", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    SuperscriptBox[
                    "\[PartialD]", "\!\(xAct`xTensor`Private`c\+_\)"], 
                    "xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`a_", "?", 
                    "xAct`xTensor`Private`vbpmQ"}], ",", 
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbpmQ"}]}], "]"}], AutoSpacing -> 
                    False, ShowAutoStyles -> False], 
                    xAct`xTensor`PD[
                    Pattern[xAct`xTensor`Private`c, 
                    Blank[]]][
                    xAct`xTensor`Private`metric[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`Private`vbpmQ], 
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbpmQ]]], Editable -> 
                    False], "^=", "0"}], ";", 
                    RowBox[{"xAct`xTensor`Private`metric", "/:", 
                    RowBox[{"TensorDerivative", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", ",", "PD"}], "]"}],
                     ":=", "Zero"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "xAct`xTensor`Private`frozenQ"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"xAct`xTensor`Private`$SortPDsRules", ",", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    SuperscriptBox[
                    "\[PartialD]", 
                    "\!\(\!\(xAct`xTensor`Private`b\+_\)\+_\)"], 
                    SuperscriptBox[
                    "\[PartialD]", 
                    "\!\(\!\(xAct`xTensor`Private`a\+_\)\+_\)"], 
                    "xAct`xTensor`Private`expr1_"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    xAct`xTensor`PD[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbpmQ]][
                    xAct`xTensor`PD[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`Private`vbpmQ]][
                    Pattern[xAct`xTensor`Private`expr1, 
                    Blank[]]]], Editable -> False], "\[RuleDelayed]", 
                    RowBox[{
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    SuperscriptBox["\[PartialD]", "xAct`xTensor`Private`a"], 
                    SuperscriptBox["\[PartialD]", "xAct`xTensor`Private`b"], 
                    "xAct`xTensor`Private`expr1"}], AutoSpacing -> False, 
                    ShowAutoStyles -> False], 
                    xAct`xTensor`PD[xAct`xTensor`Private`a][
                    xAct`xTensor`PD[xAct`xTensor`Private`b][
                    xAct`xTensor`Private`expr1]], Editable -> False], "/;", 
                    RowBox[{"DisorderedPairQ", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`a", ",", 
                    "xAct`xTensor`Private`b"}], "]"}]}]}]}], "]"}]}], "]"}]}],
                     ",", 
                    RowBox[{"DefCovD", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`covd", "[", 
                    RowBox[{"-", "xAct`xTensor`Private`ind1"}], "]"}], ",", 
                    "xAct`xTensor`Private`covdsymbol", ",", 
                    
                    RowBox[{"FromMetric", "\[Rule]", 
                    "xAct`xTensor`Private`metric"}], ",", 
                    RowBox[{"Curvature", "\[RuleDelayed]", 
                    RowBox[{"!", "xAct`xTensor`Private`flat"}]}], ",", 
                    
                    RowBox[{"OtherDependencies", "\[Rule]", 
                    "xAct`xTensor`Private`odeps"}], ",", 
                    RowBox[{"OrthogonalTo", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`vector", "[", 
                    "xAct`xTensor`Private`ind1", "]"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ProjectedWith", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`ind1", ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2"}]}], "]"}], 
                    "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    
                    RowBox[{"Master", "\[Rule]", 
                    "xAct`xTensor`Private`metric"}], ",", 
                    RowBox[{"ProtectNewSymbol", "\[Rule]", "False"}], ",", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"{", "xAct`xTensor`Private`options", "}"}], ",", 
                    RowBox[{"_", "[", 
                    RowBox[{"PrintAs", ",", "_"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`InducedCovDQ", "[", 
                    "xAct`xTensor`Private`covd", "]"}], "=", 
                    "xAct`xTensor`Private`inducedQ"}], ";", 
                    RowBox[{"xAct`xTensor`Private`LCmetric", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"TorsionQ", "[", "xAct`xTensor`Private`covd", 
                    "]"}], ",", 
                    RowBox[{"LC", "[", "xAct`xTensor`Private`metric", "]"}], 
                    ",", "xAct`xTensor`Private`covd"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    
                    RowBox[{"CovDQ", "[", "xAct`xTensor`Private`LCmetric", 
                    "]"}]}], ",", 
                    RowBox[{"DefCovD", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`LCmetric", "[", 
                    RowBox[{"-", "xAct`xTensor`Private`ind1"}], "]"}], ",", 
                    "xAct`xTensor`Private`covdsymbol", ",", 
                    
                    RowBox[{"FromMetric", "\[Rule]", 
                    "xAct`xTensor`Private`metric"}], ",", 
                    RowBox[{"Torsion", "\[Rule]", "False"}], ",", 
                    RowBox[{"Curvature", "\[Rule]", "True"}], ",", 
                    
                    RowBox[{"OtherDependencies", "\[Rule]", 
                    "xAct`xTensor`Private`odeps"}], ",", 
                    RowBox[{"OrthogonalTo", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`vector", "[", 
                    "xAct`xTensor`Private`ind1", "]"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    RowBox[{"ProjectedWith", "\[RuleDelayed]", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"{", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{"xAct`xTensor`Private`ind1", ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2"}]}], "]"}], 
                    "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], ",", 
                    
                    RowBox[{"Master", "\[Rule]", 
                    "xAct`xTensor`Private`metric"}], ",", 
                    RowBox[{"ProtectNewSymbol", "\[Rule]", "False"}], ",", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{
                    RowBox[{"{", "xAct`xTensor`Private`options", "}"}], ",", 
                    RowBox[{"_", "[", 
                    RowBox[{"PrintAs", ",", "_"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}], ";", 
                    RowBox[{"xAct`xTensor`Private`metric", "/:", 
                    RowBox[{"CovDOfMetric", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", ",", 
                    
                    RowBox[{"Torsion", "[", "xAct`xTensor`Private`covd", 
                    "]"}]}], "]"}], "=", "xAct`xTensor`Private`covd"}], ";", 
                    RowBox[{"xAct`xTensor`Private`metric", "/:", 
                    RowBox[{"CovDOfMetric", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", ",", 
                    
                    RowBox[{"Torsion", "[", "xAct`xTensor`Private`LCmetric", 
                    "]"}]}], "]"}], "=", "xAct`xTensor`Private`LCmetric"}], 
                    ";", 
                    RowBox[{"xAct`xTensor`Private`metric", "/:", 
                    RowBox[{"CovDOfMetric", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", ",", "Zero"}], 
                    "]"}], "=", "xAct`xTensor`Private`LCmetric"}], ";", 
                    RowBox[{"xAct`xTensor`Private`metric", "/:", 
                    RowBox[{"LC", "[", "xAct`xTensor`Private`metric", "]"}], 
                    "=", "xAct`xTensor`Private`LCmetric"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`flatPD", ",", 
                    RowBox[{"Protect", "[", "PD", "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"$ProtectNewSymbols", ",", 
                    
                    RowBox[{"Protect", "[", "xAct`xTensor`Private`covd", 
                    "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", "xAct`xTensor`Private`inducedQ"}], ",", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "/:", 
                    RowBox[{"HoldPattern", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`der_", "?", "FirstDerQ"}], 
                    "[", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    RowBox[{
                    
                    RowBox[{"xAct`xTensor`Private`b_", "?", 
                    "xAct`xTensor`Private`vbQ"}], ",", 
                    
                    RowBox[{"xAct`xTensor`Private`c_", "?", 
                    "xAct`xTensor`Private`vbQ"}]}], "]"}], "]"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`b1", "=", 
                    
                    RowBox[{"DummyIn", "[", "xAct`xTensor`Private`vbundle", 
                    "]"}]}], ",", 
                    RowBox[{"xAct`xTensor`Private`c1", "=", 
                    
                    RowBox[{"DummyIn", "[", "xAct`xTensor`Private`vbundle", 
                    "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`b", ",", 
                    "xAct`xTensor`Private`b1"}], "]"}]}], " ", 
                    RowBox[{"xAct`xTensor`Private`invmetric", "[", 
                    
                    RowBox[{"xAct`xTensor`Private`c", ",", 
                    "xAct`xTensor`Private`c1"}], "]"}], " ", 
                    RowBox[{"xAct`xTensor`Private`der", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`b1"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`c1"}]}], "]"}], 
                    "]"}]}]}], "]"}]}]}], "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`info", "===", "False"}], 
                    ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$DefInfoQ", "=", "False"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Determinant", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", ",", "AIndex"}], 
                    "]"}], "[", "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Determinant", "[", 
                    RowBox[{"xAct`xTensor`Private`metric", ",", "AIndex"}], 
                    "]"}], "[", "]"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`tangentmetricQ", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`inducedQ", ",", 
                    RowBox[{"xAct`xTensor`Private`DefInducedMetric", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`ind1"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2"}]}], "]"}], ",", 
                    RowBox[{"{", "xAct`xTensor`Private`manifold", "}"}], ",", 
                    "xAct`xTensor`Private`covd", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"xAct`xTensor`Private`vector", ",", 
                    "xAct`xTensor`Private`supermetric", ",", 
                    
                    RowBox[{"CovDOfMetric", "[", 
                    "xAct`xTensor`Private`supermetric", "]"}]}], "}"}], ",", 
                    "xAct`xTensor`Private`flat"}], "]"}]}], "]"}]}], "]"}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`confto", "=!=", "Null"}], 
                    ",", 
                    RowBox[{"SetConformalTo", "[", 
                    RowBox[{
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`ind1"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2"}]}], "]"}], ",", 
                    "xAct`xTensor`Private`confto"}], "]"}]}], "]"}], ";", 
                    RowBox[{"MakexTensions", "[", 
                    
                    RowBox[{"DefMetric", ",", "\"End\"", ",", 
                    "xAct`xTensor`Private`signdet", ",", 
                    RowBox[{"xAct`xTensor`Private`metric", "[", 
                    RowBox[{
                    RowBox[{"-", "xAct`xTensor`Private`ind1"}], ",", 
                    RowBox[{"-", "xAct`xTensor`Private`ind2"}]}], "]"}], ",", 
                    "xAct`xTensor`Private`covd", ",", 
                    "xAct`xTensor`Private`options"}], "]"}], ";", 
                    RowBox[{"On", "[", 
                    StyleBox[
                    RowBox[{"OptionValue", "::", "nodef"}], "MessageName"], 
                    "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"xAct`xTensor`Private`pns", ",", 
                    
                    RowBox[{"Protect", "[", "xAct`xTensor`Private`metric", 
                    "]"}]}], "]"}], ";"}]}], "]"}]}]}], "]"}]}], "]"}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DefMetric", "[", 
                    
                    RowBox[{
                    "xAct`xTensor`Private`signdet_", ",", 
                    "xAct`xTensor`Private`metric_", ",", 
                    RowBox[{"xAct`xTensor`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"DefMetric", "[", 
                    
                    RowBox[{
                    "xAct`xTensor`Private`signdet", ",", 
                    "xAct`xTensor`Private`metric", ",", "None", ",", 
                    "xAct`xTensor`Private`opts"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DefMetric", "[", 
                    
                    RowBox[{
                    "_", ",", "xAct`xTensor`Private`metric_", ",", "_", ",", 
                    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DefMetric", "::", "invalid"}], "MessageName"], 
                    ",", "xAct`xTensor`Private`metric", ",", "\"metric\""}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DefMetric", "[", "_", "]"}], ":=", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"DefMetric", "::", "argr"}], "MessageName"], ",", 
                    "DefMetric", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "\[Infinity]"}], "}"}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"PrintAs", "\[Rule]", "Identity"}]},
                    {
                    RowBox[{"FlatMetric", "\[Rule]", "False"}]},
                    {
                    RowBox[{"InducedFrom", "\[Rule]", "Null"}]},
                    {
                    RowBox[{"ConformalTo", "\[Rule]", "Null"}]},
                    {
                    RowBox[{"OtherDependencies", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"WeightedWithBasis", "\[Rule]", "Null"}]},
                    {
                    RowBox[{"epsilonOrientationInBasis", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{"AIndex", ",", 
                    InterpretationBox[
                    StyleBox[
                    SubscriptBox["s", "\[Epsilon]"],
                    ShowAutoStyles->False,
                    AutoSpacing->False],
                    xAct`xTensor`$epsilonSign,
                    Editable->False]}], "}"}]}]},
                    {
                    RowBox[{"Master", "\[Rule]", "Null"}]},
                    {
                    RowBox[{
                    "ProtectNewSymbol", "\[RuleDelayed]", 
                    "$ProtectNewSymbols"}]},
                    {
                    RowBox[{"DefInfo", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "10", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"PrintAs", "\[Rule]", "Identity"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "10", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"xAct`xTensor`DefMetric\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DefMetric[signdet, metric[-a,-b], covd, covdsymbol] \
defines metric[-a, -b] with signdet 1 or -1 and associates the covariant \
derivative covd[-a] to it.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DefMetric[signdet, metric[-a,-b], covd, covdsymbol] defines metric[-a, \
-b] with signdet 1 or -1 and associates the covariant derivative covd[-a] to \
it.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, xAct`xTensor`DefMetric, {xAct`xTensor`DefMetric[] :> Message[
         MessageName[xAct`xTensor`DefMetric, "argm"], xAct`xTensor`DefMetric, 
         0, 2], xAct`xTensor`DefMetric[
         Pattern[xAct`xTensor`Private`signdet, 
          Blank[]], 
         Pattern[xAct`xTensor`Private`metric, 
          Blank[]], 
         Pattern[xAct`xTensor`Private`covd, 
          Blank[]], 
         Pattern[xAct`xTensor`Private`covdsymbol, {
           Blank[String], 
           Blank[String]}], 
         Pattern[xAct`xTensor`Private`options, 
          OptionsPattern[]]] :> 
       xAct`xTensor`DefMetric[
        xAct`xTensor`Private`signdet, xAct`xTensor`Private`metric, 
         xAct`xTensor`Private`covd, xAct`xTensor`SymbolOfCovD -> 
         xAct`xTensor`Private`covdsymbol, xAct`xTensor`Private`options], 
       xAct`xTensor`DefMetric[
         Pattern[xAct`xTensor`Private`signdet, 
          Blank[]], 
         Pattern[xAct`xTensor`Private`metric, 
          Blank[]][-Pattern[xAct`xTensor`Private`ind1, 
            Blank[]], -Pattern[xAct`xTensor`Private`ind2, 
            Blank[]]], 
         Pattern[xAct`xTensor`Private`covd, 
          Blank[]], 
         Pattern[xAct`xTensor`Private`options, 
          OptionsPattern[]]] :> Catch[
         With[{
          xAct`xTensor`Private`vbundle = 
           xAct`xTensor`VBundleOfIndex[xAct`xTensor`Private`ind1]}, 
          
          Module[{xAct`xTensor`Private`tangentmetricQ, 
            xAct`xTensor`Private`covdsymbol, xAct`xTensor`Private`flat, 
            xAct`xTensor`Private`inducedfrom, xAct`xTensor`Private`confto, 
            xAct`xTensor`Private`odeps, xAct`xTensor`Private`wwb, 
            xAct`xTensor`Private`eoib, xAct`xTensor`Private`pns, 
            xAct`xTensor`Private`info, xAct`xTensor`Private`flatPD, 
            xAct`xTensor`Private`inducedQ, xAct`xTensor`Private`dim, 
            xAct`xTensor`Private`integerdimQ, xAct`xTensor`Private`frozenQ, 
            xAct`xTensor`Private`firstQ, xAct`xTensor`Private`invertQ, 
            xAct`xTensor`Private`firstmetric, 
            xAct`xTensor`Private`supermetric, xAct`xTensor`Private`vector, 
            xAct`xTensor`Private`LCmetric}, {
             xAct`xTensor`Private`covdsymbol, xAct`xTensor`Private`flat, 
              xAct`xTensor`Private`inducedfrom, xAct`xTensor`Private`confto, 
              xAct`xTensor`Private`odeps, xAct`xTensor`Private`wwb, 
              xAct`xTensor`Private`eoib, xAct`xTensor`Private`pns, 
              xAct`xTensor`Private`info} = 
            OptionValue[{xAct`xTensor`DefMetric, xAct`xTensor`DefCovD}, {
              xAct`xTensor`Private`options}, {
              xAct`xTensor`SymbolOfCovD, xAct`xTensor`FlatMetric, 
               xAct`xTensor`InducedFrom, xAct`xTensor`ConformalTo, 
               xAct`xTensor`OtherDependencies, xAct`xTensor`WeightedWithBasis,
                xAct`xTensor`epsilonOrientationInBasis, 
               xAct`xTensor`ProtectNewSymbol, xAct`xTensor`DefInfo}]; 
           xAct`xTensor`Private`DefMetricCheck[xAct`xTensor`Private`signdet, 
             
             xAct`xTensor`Private`metric[-xAct`xTensor`Private`ind1, -
              xAct`xTensor`Private`ind2], xAct`xTensor`Private`covd, 
             xAct`xTensor`Private`covdsymbol, xAct`xTensor`Private`flat, 
             xAct`xTensor`Private`inducedfrom, xAct`xTensor`Private`confto, 
             xAct`xTensor`Private`odeps, xAct`xTensor`Private`wwb, 
             xAct`xTensor`Private`eoib]; 
           xAct`xTensor`Private`tangentmetricQ = xAct`xTensor`Tangent[
               xAct`xTensor`BaseOfVBundle[xAct`xTensor`Private`vbundle]] === 
             xAct`xTensor`Private`vbundle; 
           xAct`xTensor`Private`flatPD = 
            And[xAct`xTensor`Private`flat, xAct`xTensor`Private`covd === 
              xAct`xTensor`PD]; 
           xAct`xTensor`Private`dim = 
            xAct`xTensor`DimOfVBundle[xAct`xTensor`Private`vbundle]; 
           xAct`xTensor`Private`integerdimQ = 
            IntegerQ[xAct`xTensor`Private`dim]; 
           xAct`xTensor`Private`firstQ = 
            xAct`xTensor`MetricsOfVBundle[
              xAct`xTensor`Private`vbundle] === {}; 
           xAct`xTensor`Private`inducedQ = And[
              Not[xAct`xTensor`Private`firstQ], 
              xAct`xTensor`Private`inducedfrom =!= Null]; 
           xAct`xTensor`Private`frozenQ = And[
              Not[xAct`xTensor`Private`firstQ], 
              Not[xAct`xTensor`Private`inducedQ]]; 
           If[xAct`xTensor`Private`inducedQ, {
              xAct`xTensor`Private`supermetric, xAct`xTensor`Private`vector} = 
             xAct`xTensor`Private`inducedfrom]; 
           If[xAct`xTensor`Private`frozenQ, xAct`xTensor`Private`firstmetric = 
             First[
               xAct`xTensor`MetricsOfVBundle[xAct`xTensor`Private`vbundle]]]; 
           With[{xAct`xTensor`Private`manifold = 
              xAct`xTensor`BaseOfVBundle[xAct`xTensor`Private`vbundle], 
              xAct`xTensor`Private`deps = Union[{
                 xAct`xTensor`BaseOfVBundle[xAct`xTensor`Private`vbundle]}, 
                xAct`xTensor`Private`odeps], xAct`xTensor`Private`vbQ = 
              xAct`xTensor`Private`VBundleIndexQ[
               xAct`xTensor`Private`vbundle], xAct`xTensor`Private`vbpmQ = 
              xAct`xTensor`Private`VBundleIndexPMQ[
               xAct`xTensor`Private`vbundle], xAct`xTensor`Private`invmetric = 
              If[xAct`xTensor`Private`frozenQ, 
                xAct`xTensor`GiveSymbol[
                xAct`xTensor`Inv, xAct`xTensor`Private`metric], 
                xAct`xTensor`Private`metric]}, Off[
               MessageName[OptionValue, "nodef"]]; xAct`xTensor`DefTensor[
               
               xAct`xTensor`Private`metric[-xAct`xTensor`Private`ind1, -
                xAct`xTensor`Private`ind2], xAct`xTensor`Private`deps, 
               Symmetric[{1, 2}], xAct`xTensor`ProtectNewSymbol -> False, 
               xAct`xTensor`OrthogonalTo :> If[xAct`xTensor`Private`inducedQ, {
                  xAct`xTensor`Private`vector[
                  xAct`xTensor`Private`ind1]}, {}], xAct`xTensor`DefInfo :> 
               If[xAct`xTensor`Private`info === False, False, {
                 "symmetric metric tensor", ""}], 
               xAct`xTensor`Private`options]; 
             xAct`xCore`MakexTensions[
              xAct`xTensor`DefMetric, "Beginning", 
               xAct`xTensor`Private`signdet, 
               
               xAct`xTensor`Private`metric[-xAct`xTensor`Private`ind1, -
                xAct`xTensor`Private`ind2], xAct`xTensor`Private`covd, 
               xAct`xTensor`Private`options]; 
             xAct`xCore`AppendToUnevaluated[
              xAct`xTensor`$Metrics, xAct`xTensor`Private`metric]; UpSet[
               xAct`xTensor`MetricQ[xAct`xTensor`Private`metric], True]; UpSet[
               xAct`xTensor`CovDOfMetric[xAct`xTensor`Private`metric], 
               xAct`xTensor`Private`covd]; UpSet[
               xAct`xTensor`VBundleOfMetric[xAct`xTensor`Private`metric], 
               xAct`xTensor`Private`vbundle]; xAct`xCore`xUpAppendTo[
               xAct`xTensor`MetricsOfVBundle[xAct`xTensor`Private`vbundle], 
               xAct`xTensor`Private`metric]; UpSet[
               xAct`xTensor`FlatMetricQ[xAct`xTensor`Private`metric], 
               xAct`xTensor`Private`flat]; UpSet[
               xAct`xTensor`InducedFrom[xAct`xTensor`Private`metric], 
               xAct`xTensor`Private`inducedfrom]; If[
               And[
               Head[xAct`xTensor`Private`signdet] === List, 
                Length[xAct`xTensor`Private`signdet] === 3], UpSet[
                 xAct`xTensor`SignatureOfMetric[xAct`xTensor`Private`metric], 
                 xAct`xTensor`Private`signdet]; UpSet[
                 xAct`xTensor`SignDetOfMetric[xAct`xTensor`Private`metric], 
                 If[
                 Part[xAct`xTensor`Private`signdet, 3] === 0, (-1)^
                  Part[xAct`xTensor`Private`signdet, 2], 0]], UpSet[
                 xAct`xTensor`SignDetOfMetric[xAct`xTensor`Private`metric], 
                 xAct`xTensor`Private`signdet]; Null]; 
             xAct`xTensor`Private`invertQ = 
              xAct`xTensor`SignDetOfMetric[xAct`xTensor`Private`metric] =!= 0; 
             If[xAct`xTensor`Private`invertQ, 
               If[xAct`xTensor`Private`frozenQ, 
                xAct`xTensor`DefTensor[
                 xAct`xTensor`Private`invmetric[
                 xAct`xTensor`Private`ind1, xAct`xTensor`Private`ind2], 
                 xAct`xTensor`Private`deps, 
                 Symmetric[{1, 2}], xAct`xTensor`ProtectNewSymbol -> False, 
                 xAct`xTensor`Master -> xAct`xTensor`Private`metric, 
                 xAct`xTensor`DefInfo :> 
                 If[xAct`xTensor`Private`info === False, False, {
                   "inverse metric tensor", "Metric is frozen!"}], 
                 xAct`xTensor`TensorID -> {
                  xAct`xTensor`Private`InvMetric, 
                   xAct`xTensor`Private`metric}, xAct`xTensor`PrintAs :> 
                 xAct`xTensor`GiveOutputString[
                  xAct`xTensor`Inv, xAct`xTensor`Private`metric], 
                 xAct`xTensor`Private`options], 
                UpSet[
                 xAct`xTensor`Inv[xAct`xTensor`Private`metric], 
                 xAct`xTensor`Private`metric]], 
               Print[
               "** DefMetric: non-invertible metric being defined! \
Dangerous!"]]; If[xAct`xTensor`Private`firstQ, xAct`xTensor`Private`metric[
                  xAct`xTensor`Dir[
                   Pattern[xAct`xTensor`Private`expr, 
                    Blank[]]], 
                  Pattern[xAct`xTensor`Private`b, 
                   Blank[]]] := 
                xAct`xTensor`ReplaceIndex[
                 xAct`xTensor`Private`expr, 
                  xAct`xTensor`Private`UltraindexOf[
                   xAct`xTensor`Private`expr] -> xAct`xTensor`Private`b]; 
               xAct`xTensor`Private`metric[
                  Pattern[xAct`xTensor`Private`a, 
                   Blank[]], 
                  xAct`xTensor`Dir[
                   Pattern[xAct`xTensor`Private`expr, 
                    Blank[]]]] := 
                xAct`xTensor`ReplaceIndex[
                 xAct`xTensor`Private`expr, 
                  xAct`xTensor`Private`UltraindexOf[
                   xAct`xTensor`Private`expr] -> xAct`xTensor`Private`a]; 
               Null]; TagSet[xAct`xTensor`Private`metric, 
               xAct`xTensor`epsilonOrientation[xAct`xTensor`Private`metric, 
                Part[xAct`xTensor`Private`eoib, 1]], 
               Part[xAct`xTensor`Private`eoib, 2]]; 
             With[{xAct`xTensor`Private`epsilonname = 
                xAct`xTensor`GiveSymbol[
                 xAct`xTensor`epsilon, xAct`xTensor`Private`metric], 
                xAct`xTensor`Private`inds = 
                xAct`xTensor`GetIndicesOfVBundle[xAct`xTensor`Private`vbundle, 
                  If[xAct`xTensor`Private`integerdimQ, 
                   If[
                   xAct`xTensor`Private`inducedQ, xAct`xTensor`Private`dim - 
                    1, xAct`xTensor`Private`dim], 2]]}, xAct`xTensor`DefTensor[
                 Apply[xAct`xTensor`Private`epsilonname, 
                  Map[xAct`xTensor`ChangeIndex, xAct`xTensor`Private`inds]], 
                 xAct`xTensor`Private`deps, 
                 Antisymmetric[
                  Range[
                   Length[xAct`xTensor`Private`inds]]], xAct`xTensor`PrintAs :> 
                 xAct`xTensor`GiveOutputString[
                  xAct`xTensor`epsilon, xAct`xTensor`Private`metric], 
                 xAct`xTensor`ProtectNewSymbol -> False, xAct`xTensor`Master -> 
                 xAct`xTensor`Private`metric, xAct`xTensor`OrthogonalTo :> 
                 If[xAct`xTensor`Private`inducedQ, {
                    xAct`xTensor`Private`vector[
                    First[xAct`xTensor`Private`inds]]}, {}], 
                 xAct`xTensor`ProjectedWith :> 
                 If[xAct`xTensor`Private`inducedQ, {
                    
                    xAct`xTensor`Private`metric[-
                    xAct`xTensor`DummyIn[xAct`xTensor`Private`vbundle], 
                    First[xAct`xTensor`Private`inds]]}, {}], 
                 xAct`xTensor`DefInfo :> 
                 If[xAct`xTensor`Private`info === False, False, {
                   "antisymmetric tensor", ""}], 
                 xAct`xTensor`TensorID -> {
                  xAct`xTensor`epsilon, xAct`xTensor`Private`metric}]; If[
                 And[
                  Not[xAct`xTensor`Private`integerdimQ], 
                  Not[xAct`xTensor`Private`inducedQ]], 
                 TagSetDelayed[xAct`xTensor`Private`epsilonname, 
                   xAct`xTensor`SymmetryGroupOfTensor[
                    xAct`xTensor`Private`epsilonname[
                    Pattern[xAct`xTensor`Private`inds1, 
                    BlankSequence[]]]], 
                   Antisymmetric[
                    Range[
                    Length[{xAct`xTensor`Private`inds1}]]]]; 
                 TagUnset[xAct`xTensor`Private`epsilonname, 
                   xAct`xTensor`SymmetryGroupOfTensor[
                   xAct`xTensor`Private`epsilonname]]; 
                 TagSetDelayed[xAct`xTensor`Private`epsilonname, 
                   xAct`xTensor`SymmetryGroupOfTensor[
                   xAct`xTensor`Private`epsilonname], 
                   Antisymmetric[
                    Range[
                    xAct`xTensor`DimOfVBundle[
                    xAct`xTensor`Private`vbundle]]]]]; If[
                 Or[
                 xAct`xTensor`Private`inducedQ, xAct`xTensor`Private`frozenQ], 
                 TagSetDelayed[
                 xAct`xTensor`Private`epsilonname, 
                  xAct`xTensor`Private`epsilonname[
                    Pattern[xAct`xTensor`Private`inds1, 
                    BlankSequence[]]] xAct`xTensor`Private`epsilonname[
                    Pattern[xAct`xTensor`Private`inds2, 
                    BlankSequence[]]], 
                  xAct`xTensor`SignDetOfMetric[xAct`xTensor`Private`metric] 
                  xAct`xTensor`Private`expandGdelta[
                   xAct`xTensor`Private`metric][
                   xAct`xTensor`Private`inds1, xAct`xTensor`Private`inds2]], 
                 TagSetDelayed[
                 xAct`xTensor`Private`epsilonname, 
                  xAct`xTensor`Private`epsilonname[
                    Pattern[xAct`xTensor`Private`inds1, 
                    BlankSequence[]]] xAct`xTensor`Private`epsilonname[
                    Pattern[xAct`xTensor`Private`inds2, 
                    BlankSequence[]]], 
                  xAct`xTensor`SignDetOfMetric[xAct`xTensor`Private`metric] 
                  xAct`xTensor`ExpandGdelta[
                    xAct`xTensor`Gdelta[
                    xAct`xTensor`Private`inds1, 
                    xAct`xTensor`Private`inds2]]]]; 
               If[xAct`xTensor`Private`tangentmetricQ, 
                 If[xAct`xTensor`Private`frozenQ, 
                   UpSet[
                    xAct`xTensor`Private`covd[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]]][
                    xAct`xTensor`Private`epsilonname[
                    Repeated[-PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ]]]], 0], 
                   UpSet[
                    xAct`xTensor`Private`covd[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]]][
                    xAct`xTensor`Private`epsilonname[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    BlankSequence[]], xAct`xTensor`Private`vbpmQ]]], 0]]; 
                 xAct`xTensor`TensorDerivative[
                   xAct`xTensor`Private`epsilonname, 
                    xAct`xTensor`Private`covd, 
                    BlankNullSequence[]] := xAct`xTensor`Zero; If[
                   Not[xAct`xTensor`Private`inducedQ], If[
                    Not[xAct`xTensor`Private`frozenQ], 
                    TagSetDelayed[xAct`xTensor`Private`epsilonname, 
                    xAct`xTensor`LieD[
                    Pattern[xAct`xTensor`Private`v, 
                    Blank[]]][
                    xAct`xTensor`Private`epsilonname[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`inds1, 
                    BlankSequence[]], xAct`xTensor`UpIndexQ]]], 
                    
                    Module[{
                    xAct`xTensor`Private`dummy = 
                    xAct`xTensor`DummyIn[xAct`xTensor`Private`vbundle]}, -
                    xAct`xTensor`Private`covd[-xAct`xTensor`Private`dummy][
                    xAct`xTensor`ReplaceIndex[
                    xAct`xTensor`Private`v, {
                    xAct`xTensor`Private`UltraindexOf[xAct`xTensor`Private`v] -> 
                    xAct`xTensor`Private`dummy}] 
                    xAct`xTensor`Private`epsilonname[
                    xAct`xTensor`Private`inds1]]]]]; 
                   TagSetDelayed[xAct`xTensor`Private`epsilonname, 
                    xAct`xTensor`LieD[
                    Pattern[xAct`xTensor`Private`v, 
                    Blank[]]][
                    xAct`xTensor`Private`epsilonname[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`inds1, 
                    BlankSequence[]], xAct`xTensor`DownIndexQ]]], 
                    
                    Module[{
                    xAct`xTensor`Private`dummy = 
                    xAct`xTensor`DummyIn[xAct`xTensor`Private`vbundle]}, 
                    xAct`xTensor`Private`covd[-xAct`xTensor`Private`dummy][
                    xAct`xTensor`ReplaceIndex[
                    xAct`xTensor`Private`v, {
                    xAct`xTensor`Private`UltraindexOf[xAct`xTensor`Private`v] -> 
                    xAct`xTensor`Private`dummy}] 
                    xAct`xTensor`Private`epsilonname[
                    xAct`xTensor`Private`inds1]]]]; 
                   TagSetDelayed[xAct`xTensor`Private`epsilonname, 
                    xAct`xTensor`TensorDerivative[
                    xAct`xTensor`Private`epsilonname, 
                    xAct`xTensor`LieD[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`vhead, 
                    Blank[]], xAct`xTensor`xTensorQ][
                    Blank[]]]], 
                    
                    With[{xAct`xTensor`Private`dummy = 
                    xAct`xTensor`DummyIn[xAct`xTensor`Private`vbundle]}, 
                    xAct`xTensor`MultiplyHead[
                    xAct`xTensor`TensorDerivative[
                    xAct`xTensor`Private`vhead, xAct`xTensor`Private`covd][
                    xAct`xTensor`Private`dummy, -xAct`xTensor`Private`dummy], 
                    xAct`xTensor`Private`epsilonname]]]; Null]]; If[
                 And[
                 xAct`xTensor`Private`dim === 2, xAct`xTensor`Private`firstQ],
                  UpSet[xAct`xTensor`Private`epsilonname[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], 
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]]] xAct`xTensor`Private`epsilonname[
                    Pattern[xAct`xTensor`Private`c, 
                    Blank[]], 
                    Pattern[xAct`xTensor`Private`d, 
                    Blank[]]], 
                   xAct`xTensor`SignDetOfMetric[xAct`xTensor`Private`metric] (
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`a, xAct`xTensor`Private`c] 
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`b, xAct`xTensor`Private`d] - 
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`a, xAct`xTensor`Private`d] 
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`b, xAct`xTensor`Private`c])]; Null]; 
               If[xAct`xTensor`Private`dim == 4, 
                 
                 With[{xAct`xTensor`Private`TetraName = 
                   xAct`xTensor`GiveSymbol[
                    xAct`xTensor`Tetra, xAct`xTensor`Private`metric]}, 
                  Module[{
                    xAct`xTensor`Private`i1, xAct`xTensor`Private`i2, 
                    xAct`xTensor`Private`i3, 
                    xAct`xTensor`Private`i4}, {
                    xAct`xTensor`Private`i1, xAct`xTensor`Private`i2, 
                    xAct`xTensor`Private`i3, xAct`xTensor`Private`i4} = 
                    xAct`xTensor`GetIndicesOfVBundle[
                    xAct`xTensor`Private`vbundle, 4]; xAct`xTensor`DefTensor[
                    
                    xAct`xTensor`Private`TetraName[-xAct`xTensor`Private`i1, -
                    xAct`xTensor`Private`i2, -xAct`xTensor`Private`i3, -
                    xAct`xTensor`Private`i4], xAct`xTensor`Private`deps, 
                    xAct`xPerm`GenSet[
                    xAct`xPerm`Cycles[{1, 2}, {3, 4}], 
                    xAct`xPerm`Cycles[{1, 3}, {2, 4}]], xAct`xTensor`Dagger -> 
                    Complex, xAct`xTensor`PrintAs :> 
                    xAct`xTensor`GiveOutputString[
                    xAct`xTensor`Tetra, xAct`xTensor`Private`metric], 
                    xAct`xTensor`Master -> xAct`xTensor`Private`metric, 
                    xAct`xTensor`ProtectNewSymbol -> False, 
                    xAct`xTensor`DefInfo :> 
                    If[xAct`xTensor`Private`info === False, False, {
                    "tetrametric", ""}]]; UpSetDelayed[
                    xAct`xTensor`TetraRule[xAct`xTensor`Private`metric], 
                    xAct`xTensor`MakeRule[{
                    xAct`xTensor`Private`TetraName[
                    xAct`xTensor`Private`i1, xAct`xTensor`Private`i2, 
                    xAct`xTensor`Private`i3, xAct`xTensor`Private`i4], (I/2) 
                    xAct`xTensor`epsilonOrientation[
                    xAct`xTensor`Private`metric, xAct`xTensor`AIndex] 
                    xAct`xTensor`Private`epsilonname[
                    xAct`xTensor`Private`i1, xAct`xTensor`Private`i2, 
                    xAct`xTensor`Private`i3, xAct`xTensor`Private`i4] + 
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`i1, xAct`xTensor`Private`i4] (
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`i2, xAct`xTensor`Private`i3]/2) - 
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`i1, xAct`xTensor`Private`i3] (
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`i2, xAct`xTensor`Private`i4]/2) + 
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`i1, xAct`xTensor`Private`i2] (
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`i3, xAct`xTensor`Private`i4]/2)}, 
                    Evaluate -> True]]; 
                    With[{xAct`xTensor`Private`TetraNamedag = 
                    xAct`xTensor`Dagger[xAct`xTensor`Private`TetraName]}, 
                    xAct`xTensor`Private`TetraNamedag[
                    Pattern[xAct`xTensor`Private`i1, 
                    Blank[]], 
                    Pattern[xAct`xTensor`Private`i2, 
                    Blank[]], 
                    Pattern[xAct`xTensor`Private`i3, 
                    Blank[]], 
                    Pattern[xAct`xTensor`Private`i4, 
                    Blank[]]] := 
                    xAct`xTensor`Private`TetraName[
                    xAct`xTensor`Private`i1, xAct`xTensor`Private`i4, 
                    xAct`xTensor`Private`i3, xAct`xTensor`Private`i2]]]; 
                  If[xAct`xTensor`$ProtectNewSymbols, 
                    Protect[xAct`xTensor`Private`TetraName, 
                    Evaluate[
                    xAct`xTensor`Dagger[xAct`xTensor`Private`TetraName]]]]]]; 
               If[xAct`xTensor`$ProtectNewSymbols, 
                 Protect[xAct`xTensor`Private`epsilonname]]]; 
             If[xAct`xTensor`Private`frozenQ, 
               TagSetDelayed[
                xAct`xTensor`Private`invmetric, xAct`xTensor`Private`metric[
                   Pattern[xAct`xTensor`Private`a, 
                    Blank[]], -PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ]] 
                 xAct`xTensor`Private`invmetric[
                   PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ], 
                   Pattern[xAct`xTensor`Private`c, 
                    Blank[]]], 
                 xAct`xTensor`Private`firstmetric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               TagSetDelayed[
                xAct`xTensor`Private`invmetric, 
                 xAct`xTensor`Private`metric[-PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ], 
                   Pattern[xAct`xTensor`Private`a, 
                    Blank[]]] xAct`xTensor`Private`invmetric[
                   PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ], 
                   Pattern[xAct`xTensor`Private`c, 
                    Blank[]]], 
                 xAct`xTensor`Private`firstmetric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               TagSetDelayed[
                xAct`xTensor`Private`invmetric, xAct`xTensor`Private`metric[
                   Pattern[xAct`xTensor`Private`a, 
                    Blank[]], -PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ]] 
                 xAct`xTensor`Private`invmetric[
                   Pattern[xAct`xTensor`Private`c, 
                    Blank[]], 
                   PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ]], 
                 xAct`xTensor`Private`firstmetric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               TagSetDelayed[
                xAct`xTensor`Private`invmetric, 
                 xAct`xTensor`Private`metric[-PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ], 
                   Pattern[xAct`xTensor`Private`a, 
                    Blank[]]] xAct`xTensor`Private`invmetric[
                   Pattern[xAct`xTensor`Private`c, 
                    Blank[]], 
                   PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ]], 
                 xAct`xTensor`Private`firstmetric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               TagSetDelayed[
                xAct`xTensor`Private`invmetric, xAct`xTensor`Private`metric[
                   Pattern[xAct`xTensor`Private`a, 
                    Blank[]], 
                   PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ]] 
                 xAct`xTensor`Private`invmetric[-PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ], 
                   Pattern[xAct`xTensor`Private`c, 
                    Blank[]]], 
                 xAct`xTensor`Private`firstmetric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               TagSetDelayed[
                xAct`xTensor`Private`invmetric, xAct`xTensor`Private`metric[
                   PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ], 
                   Pattern[xAct`xTensor`Private`a, 
                    Blank[]]] xAct`xTensor`Private`invmetric[-PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ], 
                   Pattern[xAct`xTensor`Private`c, 
                    Blank[]]], 
                 xAct`xTensor`Private`firstmetric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               TagSetDelayed[
                xAct`xTensor`Private`invmetric, xAct`xTensor`Private`metric[
                   Pattern[xAct`xTensor`Private`a, 
                    Blank[]], 
                   PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ]] 
                 xAct`xTensor`Private`invmetric[
                   Pattern[xAct`xTensor`Private`c, 
                    Blank[]], -PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ]], 
                 xAct`xTensor`Private`firstmetric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               TagSetDelayed[
                xAct`xTensor`Private`invmetric, xAct`xTensor`Private`metric[
                   PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ], 
                   Pattern[xAct`xTensor`Private`a, 
                    Blank[]]] xAct`xTensor`Private`invmetric[
                   Pattern[xAct`xTensor`Private`c, 
                    Blank[]], -PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ]], 
                 xAct`xTensor`Private`firstmetric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]], 
               If[xAct`xTensor`Private`inducedQ, xAct`xTensor`Private`metric[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`Private`vbQ], -PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`EIndexQ]] := 
                  xAct`xTensor`Private`dim - 1; 
                 xAct`xTensor`Private`metric[-PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`Private`vbQ], 
                    PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`EIndexQ]] := 
                  xAct`xTensor`Private`dim - 1]; 
               If[xAct`xTensor`Private`firstQ, xAct`xTensor`Private`metric[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`UpIndexQ], 
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`DownIndexQ]] := 
                  xAct`xTensor`delta[
                   xAct`xTensor`Private`b, xAct`xTensor`Private`a]; 
                 xAct`xTensor`Private`metric[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`DownIndexQ], 
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`UpIndexQ]] := 
                  xAct`xTensor`delta[
                   xAct`xTensor`Private`a, xAct`xTensor`Private`b]]; 
               UpSetDelayed[
                 HoldPattern[xAct`xTensor`Private`metric[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], 
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ]] 
                  xAct`xTensor`Private`metric[-PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ], 
                    Pattern[xAct`xTensor`Private`c, 
                    Blank[]]]], 
                 xAct`xTensor`Private`metric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               UpSetDelayed[
                 HoldPattern[xAct`xTensor`Private`metric[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], 
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ]] 
                  xAct`xTensor`Private`metric[
                    Pattern[xAct`xTensor`Private`c, 
                    Blank[]], -PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ]]], 
                 xAct`xTensor`Private`metric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               UpSetDelayed[
                 HoldPattern[xAct`xTensor`Private`metric[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ], 
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]]] xAct`xTensor`Private`metric[-PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ], 
                    Pattern[xAct`xTensor`Private`c, 
                    Blank[]]]], 
                 xAct`xTensor`Private`metric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; 
               UpSetDelayed[
                 HoldPattern[xAct`xTensor`Private`metric[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ], 
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]]] xAct`xTensor`Private`metric[
                    Pattern[xAct`xTensor`Private`c, 
                    Blank[]], -PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`EIndexQ]]], 
                 xAct`xTensor`Private`metric[
                 xAct`xTensor`Private`a, xAct`xTensor`Private`c]]; Null]; 
             If[xAct`xTensor`Private`tangentmetricQ, 
               If[xAct`xTensor`Private`flatPD, 
                 Print["** DefMetric: Associating fiducial flat derivative PD \
to metric."]; Unprotect[xAct`xTensor`PD]; UpSet[
                   xAct`xTensor`MetricOfCovD[xAct`xTensor`PD], 
                   xAct`xTensor`Private`metric]; UpSet[
                   xAct`xTensor`PD[
                    Pattern[xAct`xTensor`Private`c, 
                    Blank[]]][
                    xAct`xTensor`Private`metric[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`Private`vbpmQ], 
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbpmQ]]], 0]; 
                 TagSetDelayed[xAct`xTensor`Private`metric, 
                   xAct`xTensor`TensorDerivative[
                   xAct`xTensor`Private`metric, xAct`xTensor`PD], 
                   xAct`xTensor`Zero]; If[
                   Not[xAct`xTensor`Private`frozenQ], 
                   AppendTo[
                   xAct`xTensor`Private`$SortPDsRules, xAct`xTensor`PD[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbpmQ]][
                    xAct`xTensor`PD[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`a, 
                    Blank[]], xAct`xTensor`Private`vbpmQ]][
                    Pattern[xAct`xTensor`Private`expr1, 
                    Blank[]]]] :> Condition[
                    xAct`xTensor`PD[xAct`xTensor`Private`a][
                    xAct`xTensor`PD[xAct`xTensor`Private`b][
                    xAct`xTensor`Private`expr1]], 
                    xAct`xTensor`DisorderedPairQ[
                    xAct`xTensor`Private`a, xAct`xTensor`Private`b]]]], 
                 xAct`xTensor`DefCovD[
                  xAct`xTensor`Private`covd[-xAct`xTensor`Private`ind1], 
                  xAct`xTensor`Private`covdsymbol, xAct`xTensor`FromMetric -> 
                  xAct`xTensor`Private`metric, xAct`xTensor`Curvature :> 
                  Not[xAct`xTensor`Private`flat], 
                  xAct`xTensor`OtherDependencies -> 
                  xAct`xTensor`Private`odeps, xAct`xTensor`OrthogonalTo :> 
                  If[xAct`xTensor`Private`inducedQ, {
                    xAct`xTensor`Private`vector[
                    xAct`xTensor`Private`ind1]}, {}], 
                  xAct`xTensor`ProjectedWith :> 
                  If[xAct`xTensor`Private`inducedQ, {
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`ind1, -
                    xAct`xTensor`Private`ind2]}, {}], xAct`xTensor`Master -> 
                  xAct`xTensor`Private`metric, xAct`xTensor`ProtectNewSymbol -> 
                  False, 
                  DeleteCases[{xAct`xTensor`Private`options}, 
                   Blank[][xAct`xTensor`PrintAs, 
                    Blank[]]]]]; 
               xAct`xTensor`Private`InducedCovDQ[xAct`xTensor`Private`covd] = 
                xAct`xTensor`Private`inducedQ; 
               xAct`xTensor`Private`LCmetric = If[
                  xAct`xTensor`TorsionQ[xAct`xTensor`Private`covd], 
                  xAct`xTensor`LC[xAct`xTensor`Private`metric], 
                  xAct`xTensor`Private`covd]; If[
                 Not[
                  xAct`xTensor`CovDQ[xAct`xTensor`Private`LCmetric]], 
                 xAct`xTensor`DefCovD[
                  xAct`xTensor`Private`LCmetric[-xAct`xTensor`Private`ind1], 
                  xAct`xTensor`Private`covdsymbol, xAct`xTensor`FromMetric -> 
                  xAct`xTensor`Private`metric, xAct`xTensor`Torsion -> False, 
                  xAct`xTensor`Curvature -> True, 
                  xAct`xTensor`OtherDependencies -> 
                  xAct`xTensor`Private`odeps, xAct`xTensor`OrthogonalTo :> 
                  If[xAct`xTensor`Private`inducedQ, {
                    xAct`xTensor`Private`vector[
                    xAct`xTensor`Private`ind1]}, {}], 
                  xAct`xTensor`ProjectedWith :> 
                  If[xAct`xTensor`Private`inducedQ, {
                    xAct`xTensor`Private`metric[
                    xAct`xTensor`Private`ind1, -
                    xAct`xTensor`Private`ind2]}, {}], xAct`xTensor`Master -> 
                  xAct`xTensor`Private`metric, xAct`xTensor`ProtectNewSymbol -> 
                  False, 
                  DeleteCases[{xAct`xTensor`Private`options}, 
                   Blank[][xAct`xTensor`PrintAs, 
                    Blank[]]]]]; TagSet[xAct`xTensor`Private`metric, 
                 xAct`xTensor`CovDOfMetric[xAct`xTensor`Private`metric, 
                  xAct`xTensor`Torsion[xAct`xTensor`Private`covd]], 
                 xAct`xTensor`Private`covd]; 
               TagSet[xAct`xTensor`Private`metric, 
                 xAct`xTensor`CovDOfMetric[xAct`xTensor`Private`metric, 
                  xAct`xTensor`Torsion[xAct`xTensor`Private`LCmetric]], 
                 xAct`xTensor`Private`LCmetric]; 
               TagSet[xAct`xTensor`Private`metric, 
                 xAct`xTensor`CovDOfMetric[
                 xAct`xTensor`Private`metric, xAct`xTensor`Zero], 
                 xAct`xTensor`Private`LCmetric]; 
               TagSet[xAct`xTensor`Private`metric, 
                 xAct`xTensor`LC[xAct`xTensor`Private`metric], 
                 xAct`xTensor`Private`LCmetric]; 
               If[xAct`xTensor`Private`flatPD, 
                 Protect[xAct`xTensor`PD]]; 
               If[xAct`xTensor`$ProtectNewSymbols, 
                 Protect[xAct`xTensor`Private`covd]]; If[
                 Not[xAct`xTensor`Private`inducedQ], 
                 TagSetDelayed[xAct`xTensor`Private`invmetric, 
                  HoldPattern[
                   PatternTest[
                    Pattern[xAct`xTensor`Private`der, 
                    Blank[]], xAct`xTensor`FirstDerQ][
                    xAct`xTensor`Private`invmetric[
                    PatternTest[
                    Pattern[xAct`xTensor`Private`b, 
                    Blank[]], xAct`xTensor`Private`vbQ], 
                    PatternTest[
                    Pattern[xAct`xTensor`Private`c, 
                    Blank[]], xAct`xTensor`Private`vbQ]]]], 
                  
                  Module[{
                   xAct`xTensor`Private`b1 = 
                    xAct`xTensor`DummyIn[xAct`xTensor`Private`vbundle], 
                    xAct`xTensor`Private`c1 = 
                    xAct`xTensor`DummyIn[xAct`xTensor`Private`vbundle]}, (-
                    xAct`xTensor`Private`invmetric[
                    xAct`xTensor`Private`b, xAct`xTensor`Private`b1]) 
                   xAct`xTensor`Private`invmetric[
                    xAct`xTensor`Private`c, xAct`xTensor`Private`c1] 
                   xAct`xTensor`Private`der[
                    
                    xAct`xTensor`Private`metric[-xAct`xTensor`Private`b1, -
                    xAct`xTensor`Private`c1]]]]]; Null]; 
             If[xAct`xTensor`Private`info === False, 
               Block[{xAct`xTensor`$DefInfoQ = False}, 
                xAct`xTensor`Determinant[
                xAct`xTensor`Private`metric, xAct`xTensor`AIndex][]], 
               xAct`xTensor`Determinant[
               xAct`xTensor`Private`metric, xAct`xTensor`AIndex][]]; 
             If[xAct`xTensor`Private`tangentmetricQ, 
               If[xAct`xTensor`Private`inducedQ, 
                xAct`xTensor`Private`DefInducedMetric[
                 
                 xAct`xTensor`Private`metric[-xAct`xTensor`Private`ind1, -
                  xAct`xTensor`Private`ind2], {xAct`xTensor`Private`manifold},
                  xAct`xTensor`Private`covd, {
                 xAct`xTensor`Private`vector, 
                  xAct`xTensor`Private`supermetric, 
                  xAct`xTensor`CovDOfMetric[
                  xAct`xTensor`Private`supermetric]}, 
                 xAct`xTensor`Private`flat]]]; 
             If[xAct`xTensor`Private`confto =!= Null, 
               xAct`xTensor`SetConformalTo[
                
                xAct`xTensor`Private`metric[-xAct`xTensor`Private`ind1, -
                 xAct`xTensor`Private`ind2], xAct`xTensor`Private`confto]]; 
             xAct`xCore`MakexTensions[
              xAct`xTensor`DefMetric, "End", xAct`xTensor`Private`signdet, 
               
               xAct`xTensor`Private`metric[-xAct`xTensor`Private`ind1, -
                xAct`xTensor`Private`ind2], xAct`xTensor`Private`covd, 
               xAct`xTensor`Private`options]; On[
               MessageName[OptionValue, "nodef"]]; 
             If[xAct`xTensor`Private`pns, 
               Protect[xAct`xTensor`Private`metric]]; Null]]]], 
       xAct`xTensor`DefMetric[
         Pattern[xAct`xTensor`Private`signdet, 
          Blank[]], 
         Pattern[xAct`xTensor`Private`metric, 
          Blank[]], 
         Pattern[xAct`xTensor`Private`opts, 
          OptionsPattern[]]] :> 
       xAct`xTensor`DefMetric[
        xAct`xTensor`Private`signdet, xAct`xTensor`Private`metric, None, 
         xAct`xTensor`Private`opts], xAct`xTensor`DefMetric[
         Blank[], 
         Pattern[xAct`xTensor`Private`metric, 
          Blank[]], 
         Blank[], 
         OptionsPattern[]] :> Message[
         MessageName[xAct`xTensor`DefMetric, "invalid"], 
         xAct`xTensor`Private`metric, "metric"], xAct`xTensor`DefMetric[
         Blank[]] :> Message[
         MessageName[xAct`xTensor`DefMetric, "argr"], 
         xAct`xTensor`DefMetric, {2, 
          DirectedInfinity[1]}]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     xAct`xTensor`PrintAs -> Identity, xAct`xTensor`FlatMetric -> False, 
      xAct`xTensor`InducedFrom -> Null, xAct`xTensor`ConformalTo -> Null, 
      xAct`xTensor`OtherDependencies -> {}, xAct`xTensor`WeightedWithBasis -> 
      Null, xAct`xTensor`epsilonOrientationInBasis :> {
       xAct`xTensor`AIndex, xAct`xTensor`$epsilonSign}, xAct`xTensor`Master -> 
      Null, xAct`xTensor`ProtectNewSymbol :> xAct`xTensor`$ProtectNewSymbols, 
      xAct`xTensor`DefInfo -> {"", ""}}, "Attributes" -> {Protected}, 
    "FullName" -> "xAct`xTensor`DefMetric"], False]]], "Output",
 CellChangeTimes->{3.8538758693512526`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"078c09c7-f598-40af-89a6-2215a60e2130"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DefMetric", "[", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"g", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], ",", "CD", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<|\>\"", ",", "\"\<\[EmptyDownTriangle]\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8538757962309036`*^9, 3.8538757962309036`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"cb8b54db-539c-4ba3-a9b3-3127cb6156f9"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric metric tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"g", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric metric tensor ", 
   $CellContext`g[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875796786976*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"ec647431-7e2a-4eb3-b622-21b730e5212d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"antisymmetric tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"epsilong", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "antisymmetric tensor ", 
   $CellContext`epsilong[-$CellContext`a, -$CellContext`b, -$CellContext`c], 
   ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875796786976*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"ea2f4fed-4786-4395-ae02-c4f5c0180a60"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefCovD", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"covariant derivative \"\>", "\[InvisibleSpace]", 
   RowBox[{"CD", "[", 
    RowBox[{"-", "a"}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefCovD, ": Defining ", "covariant derivative ", 
   $CellContext`CD[-$CellContext`a], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875796786976*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"ebb90884-dd00-41e9-ac4a-07b59c73feb1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"vanishing torsion tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"TorsionCD", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "vanishing torsion tensor ", 
   $CellContext`TorsionCD[$CellContext`a, -$CellContext`b, -$CellContext`c], 
   ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757968215003`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"f5c7b5d2-3a82-42b7-b41e-7a48fdc8325e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Christoffel tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"ChristoffelCD", "[", 
    RowBox[{"a", ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", 
   "symmetric Christoffel tensor ", 
   $CellContext`ChristoffelCD[$CellContext`a, -$CellContext`b, \
-$CellContext`c], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757968215003`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"071c6b4e-3c5c-43b5-9920-db5badf16657"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Riemann tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"RiemannCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Riemann tensor ", 
   $CellContext`RiemannCD[-$CellContext`a, -$CellContext`b, -$CellContext`c, \
-$CellContext`d], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757968371553`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"aeda96a3-f2fe-41bc-ad87-a0b1e5ec91d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Ricci tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"RicciCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric Ricci tensor ", 
   $CellContext`RicciCD[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875796838318*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"11b74bc2-cbcf-4e95-a042-6054d0def41e"],

Cell[BoxData["\<\"** DefCovD:  Contractions of Riemann automatically replaced \
by Ricci.\"\>"], "Print",
 CellChangeTimes->{3.853875796838318*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"41059a76-bdbf-469d-8b3d-bb75e474c304"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Ricci scalar \"\>", "\[InvisibleSpace]", 
   RowBox[{"RicciScalarCD", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm["** ", xAct`xTensor`DefTensor, ": Defining ", "Ricci scalar ", 
   $CellContext`RicciScalarCD[], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875796838318*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"b55402b1-e073-47a2-bc9b-165389493e70"],

Cell[BoxData["\<\"** DefCovD:  Contractions of Ricci automatically replaced \
by RicciScalar.\"\>"], "Print",
 CellChangeTimes->{3.8538757968715663`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"632f5b94-93a8-4b0f-ad56-6de550ac4ce8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Einstein tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"EinsteinCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric Einstein tensor ", 
   $CellContext`EinsteinCD[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757968715663`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"48aa0477-4402-492a-8dd8-5e19c7c03321"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"vanishing Weyl tensor \"\>", "\[InvisibleSpace]", 
   RowBox[{"WeylCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}], ",", 
     RowBox[{"-", "c"}], ",", 
     RowBox[{"-", "d"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "vanishing Weyl tensor ", 
   $CellContext`WeylCD[-$CellContext`a, -$CellContext`b, -$CellContext`c, \
-$CellContext`d], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757968942757`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"94566968-b87a-41ec-850b-4b2204400100"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric TFRicci tensor \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"TFRicciCD", "[", 
    RowBox[{
     RowBox[{"-", "a"}], ",", 
     RowBox[{"-", "b"}]}], "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "symmetric TFRicci tensor ", 
   $CellContext`TFRicciCD[-$CellContext`a, -$CellContext`b], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757968942757`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"6978ae0a-9c50-4ce2-b596-67b57522454a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"Kretschmann scalar \"\>", "\[InvisibleSpace]", 
   RowBox[{"KretschmannCD", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "Kretschmann scalar ", 
   $CellContext`KretschmannCD[], ". ", ""],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875796910657*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"d026d5c4-ebc4-47b0-a252-badd88c67fb5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** DefCovD:  Computing RiemannToWeylRules for dim \"\>", 
   "\[InvisibleSpace]", "3"}],
  SequenceForm["** DefCovD:  Computing RiemannToWeylRules for dim ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875796913974*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"64d47549-91d2-4ddc-9959-690f24868cb9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** DefCovD:  Computing RicciToTFRicci for dim \"\>", 
   "\[InvisibleSpace]", "3"}],
  SequenceForm["** DefCovD:  Computing RicciToTFRicci for dim ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757969470415`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"3126e7e8-2489-4668-a7b7-e58668cc9dfd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** DefCovD:  Computing RicciToEinsteinRules for dim \"\>", 
   "\[InvisibleSpace]", "3"}],
  SequenceForm["** DefCovD:  Computing RicciToEinsteinRules for dim ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757969470415`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"f8d3507a-81d0-4384-bec4-ad13ac22da67"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "DefTensor", 
   "\[InvisibleSpace]", "\<\": Defining \"\>", 
   "\[InvisibleSpace]", "\<\"weight +2 density \"\>", "\[InvisibleSpace]", 
   RowBox[{"Detg", "[", "]"}], "\[InvisibleSpace]", "\<\". \"\>", 
   "\[InvisibleSpace]", "\<\"Determinant.\"\>"}],
  SequenceForm[
  "** ", xAct`xTensor`DefTensor, ": Defining ", "weight +2 density ", 
   $CellContext`Detg[], ". ", "Determinant."],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538757969641953`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"ed6a7df7-c80a-426d-b9b4-8ca643f6ccab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UndefMetric", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.8538758227265153`*^9, 3.8538758505991135`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"b30a8e4c-bb31-472f-b344-5d4cbd21e85e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"weight +2 density\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "Detg"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "weight +2 density", 
   " ", $CellContext`Detg],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538758511707897`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"9530fc2d-7f6f-46c1-a9dc-8ddeecd3521c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Christoffel tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "ChristoffelCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", 
   "symmetric Christoffel tensor", " ", $CellContext`ChristoffelCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538758511866183`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"c781cb01-e242-41c9-bc25-27c2a30a12db"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Einstein tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "EinsteinCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", 
   "symmetric Einstein tensor", " ", $CellContext`EinsteinCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538758511866183`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"2e5c7db0-882f-4cb1-baab-c61377f716dd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"Kretschmann scalar\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "KretschmannCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "Kretschmann scalar", 
   " ", $CellContext`KretschmannCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538758511866183`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"194393c4-df5e-462d-945d-a757351b9d5c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric Ricci tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "RicciCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "symmetric Ricci tensor", 
   " ", $CellContext`RicciCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538758511866183`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"2f2fc6a7-c438-475c-b825-3bceb2ee8401"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"Ricci scalar\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "RicciScalarCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "Ricci scalar", 
   " ", $CellContext`RicciScalarCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538758511866183`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"599c4b0a-46c1-44b8-a212-b7b530df77b0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"Riemann tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "RiemannCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "Riemann tensor", 
   " ", $CellContext`RiemannCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.8538758511866183`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"09c8467c-f28e-4cf0-988d-45e052839452"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric TFRicci tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "TFRicciCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "symmetric TFRicci tensor",
    " ", $CellContext`TFRicciCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.853875851202531*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"be396ff0-f995-4ab1-bd38-751bb2741895"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"torsion tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "TorsionCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "torsion tensor", 
   " ", $CellContext`TorsionCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.85387585120308*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"d194375f-8d46-42e5-b541-786945f5b2d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"Weyl tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "WeylCD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "Weyl tensor", 
   " ", $CellContext`WeylCD],
  Editable->False]], "Print",
 CellChangeTimes->{3.85387585120308*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"18cf84da-007f-470b-8a4e-4623c81be253"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefCovD", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"covariant derivative\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "CD"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefCovD, ": Undefined ", "covariant derivative", 
   " ", $CellContext`CD],
  Editable->False]], "Print",
 CellChangeTimes->{3.85387585120308*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"d91696b5-ebd7-4604-bb25-53466f612b6d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"antisymmetric tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "epsilong"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "antisymmetric tensor", 
   " ", $CellContext`epsilong],
  Editable->False]], "Print",
 CellChangeTimes->{3.85387585120308*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"eed8a535-2101-4b95-a798-06c068a76eb9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"** \"\>", "\[InvisibleSpace]", "UndefTensor", 
   "\[InvisibleSpace]", "\<\": Undefined \"\>", 
   "\[InvisibleSpace]", "\<\"symmetric metric tensor\"\>", 
   "\[InvisibleSpace]", "\<\" \"\>", "\[InvisibleSpace]", "g"}],
  SequenceForm[
  "** ", xAct`xTensor`UndefTensor, ": Undefined ", "symmetric metric tensor", 
   " ", $CellContext`g],
  Editable->False]], "Print",
 CellChangeTimes->{3.85387585120308*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"95700e2b-4120-473d-9415-b04b4e400351"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{911., 501.5},
WindowMargins->{{Automatic, 2}, {2, Automatic}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3f95a675-a484-4cbe-9461-c7b9cb51dc3f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1394, 22, 87, "Input",ExpressionUUID->"a1ccc12c-1b13-4f9e-9e3d-0d5465cf02be"],
Cell[1955, 44, 4032, 85, 145, "Input",ExpressionUUID->"61acca56-fe1b-4a25-8768-bd03b74ddba6"],
Cell[5990, 131, 156, 3, 28, "Input",ExpressionUUID->"24ddad0f-35ee-4ff4-947d-fc9c5b9ad2db"],
Cell[CellGroupData[{
Cell[6171, 138, 1562, 24, 48, "Input",ExpressionUUID->"98fceca0-b793-48bc-ba5b-9d7946ed6a98"],
Cell[7736, 164, 11407, 324, 140, "Output",ExpressionUUID->"1e7a61f6-5143-4909-8bca-74ec8a78dd99"],
Cell[19146, 490, 1517, 42, 113, "Output",ExpressionUUID->"db08004c-f3c9-4eab-a6f6-25648d7102a6"]
}, Open  ]],
Cell[20678, 535, 3629, 110, 98, "Input",ExpressionUUID->"0b69bb5d-5a62-40b7-bb03-985a9ef3562d"],
Cell[CellGroupData[{
Cell[24332, 649, 3003, 92, 58, InheritFromParent,ExpressionUUID->"c58b5e9b-f458-4b41-90fc-b253c0906cf0"],
Cell[27338, 743, 1736, 56, 80, "Output",ExpressionUUID->"cae07221-ddb6-40b7-833f-273548706378"]
}, Open  ]],
Cell[29089, 802, 1364, 38, 49, "Input",ExpressionUUID->"40f6b6e7-7acf-45b2-9d09-5e9bd412335b"],
Cell[CellGroupData[{
Cell[30478, 844, 1256, 37, 49, InheritFromParent,ExpressionUUID->"a441ec07-1d2a-4187-9d20-47cfd5f1b190"],
Cell[31737, 883, 1218, 37, 53, "Output",ExpressionUUID->"38aff5b7-53b6-4d66-8998-614913019e6a"]
}, Open  ]],
Cell[32970, 923, 758, 25, 44, InheritFromParent,ExpressionUUID->"70f59824-e685-4bc0-b444-c257245789b7"],
Cell[CellGroupData[{
Cell[33753, 952, 1067, 34, 51, "Input",ExpressionUUID->"2e950d96-9552-42cc-bf63-838219f7e074"],
Cell[34823, 988, 1042, 34, 55, "Output",ExpressionUUID->"7a54e72c-3f17-47c0-9a69-a2cded3bc8ff"]
}, Open  ]],
Cell[35880, 1025, 1083, 35, 51, "Input",ExpressionUUID->"1d33d96f-0ae7-452d-8738-84d5d067d073"],
Cell[36966, 1062, 920, 29, 51, InheritFromParent,ExpressionUUID->"00a549cb-73a4-48b9-b973-1d9fe1ae43a0"],
Cell[CellGroupData[{
Cell[37911, 1095, 1653, 54, 98, InheritFromParent,ExpressionUUID->"3f384cdc-d9a3-42d0-bc1e-d75a0df555de"],
Cell[39567, 1151, 893, 29, 55, "Output",ExpressionUUID->"f34d1828-3d3c-4cc5-aa34-59ce9ce8b9f1"],
Cell[40463, 1182, 895, 29, 55, "Output",ExpressionUUID->"84817ae0-bd13-464a-9cbf-f02a146f7a86"]
}, Open  ]],
Cell[41373, 1214, 1159, 36, 44, "Input",ExpressionUUID->"3c9a587e-cc80-48a3-8512-f939f11a12e3"],
Cell[42535, 1252, 287, 8, 28, InheritFromParent,ExpressionUUID->"745ae190-ce58-45e4-be17-69163292ca2c"],
Cell[CellGroupData[{
Cell[42847, 1264, 862, 27, 33, InheritFromParent,ExpressionUUID->"8d621d8a-b3f1-4e20-9d24-fb989a6935f6"],
Cell[43712, 1293, 996, 32, 52, "Output",ExpressionUUID->"d94df5bb-c9eb-413c-8eb8-ed9471d37789"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44745, 1330, 530, 15, 28, "Input",ExpressionUUID->"1a62905b-771a-4b46-885e-21452330a40e"],
Cell[45278, 1347, 1443, 42, 55, "Output",ExpressionUUID->"34ed8ea6-8272-42ad-acbb-c46c56e0a097"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46758, 1394, 210, 3, 28, "Input",ExpressionUUID->"9e5ee7e8-7fe0-40c4-b5ee-8fd5d2b98cb1"],
Cell[46971, 1399, 12558, 318, 243, "Output",ExpressionUUID->"8c041b17-52ac-43cc-8cc2-ddd7ba70b61a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59566, 1722, 251, 5, 28, "Input",ExpressionUUID->"edfd1065-7879-4cc0-b596-86ae47e111b8"],
Cell[59820, 1729, 7542, 242, 347, "Output",ExpressionUUID->"49c04784-2b74-4a52-9955-3026e0cbefe5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67399, 1976, 1331, 20, 47, "Input",ExpressionUUID->"7679a9cb-afc1-4f32-bb57-251b0dc9bc54"],
Cell[68733, 1998, 11611, 319, 130, "Output",ExpressionUUID->"1d0bb449-c856-45f3-8205-2e6a9e8ca64f"],
Cell[80347, 2319, 2647, 52, 112, "Output",ExpressionUUID->"ace9d086-8d81-419d-9e8f-2eebaf4447a2"]
}, Open  ]],
Cell[83009, 2374, 301, 6, 28, "Input",ExpressionUUID->"60089554-3383-450c-a63e-487fd1fbe2e3"],
Cell[83313, 2382, 3499, 108, 96, "Input",ExpressionUUID->"72f75b3b-c33a-4397-be8a-a40a59ff243d"],
Cell[CellGroupData[{
Cell[86837, 2494, 1119, 37, 47, "Input",ExpressionUUID->"f973df57-891f-4255-926a-453a21ef40aa"],
Cell[87959, 2533, 1128, 37, 51, "Output",ExpressionUUID->"e47904dd-3820-4e3c-8650-46e63f1c4b21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89124, 2575, 1449, 47, 47, "Input",ExpressionUUID->"313470ed-70ce-48ba-8ff2-65b7039ff550"],
Cell[90576, 2624, 1471, 47, 51, "Output",ExpressionUUID->"6d6f8eb6-099e-49ed-b999-bb7e0fe03296"]
}, Open  ]],
Cell[92062, 2674, 1478, 48, 93, "Input",ExpressionUUID->"062dceb7-c623-47f2-9e45-6d70e6e1df28"],
Cell[CellGroupData[{
Cell[93565, 2726, 831, 26, 56, "Input",ExpressionUUID->"861f8b4e-38b0-463a-a5e2-4cd3749ccdd6"],
Cell[94399, 2754, 848, 26, 60, "Output",ExpressionUUID->"64645241-3647-4d48-9397-188fef8fc14a"]
}, Open  ]],
Cell[95262, 2783, 469, 15, 46, "Input",ExpressionUUID->"9ab29bdd-f4c7-4913-b61c-5c5772534524"],
Cell[95734, 2800, 495, 12, 28, "Input",ExpressionUUID->"4114f0fe-5587-4e3c-a645-9fa66b0921c4"],
Cell[96232, 2814, 3309, 105, 111, "Input",ExpressionUUID->"1fc751a4-86f6-492c-a611-8fad977c7601"],
Cell[CellGroupData[{
Cell[99566, 2923, 818, 25, 49, "Input",ExpressionUUID->"a85d3820-ecc6-4fe8-b7f1-dbf8b6d08748"],
Cell[100387, 2950, 723, 24, 54, "Output",ExpressionUUID->"edebf269-ed17-431b-b63a-ea12a20cd704"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101147, 2979, 1086, 35, 50, "Input",ExpressionUUID->"ffcba2f7-888e-43dc-ad6f-b5edb3a045b5"],
Cell[102236, 3016, 178, 3, 32, "Output",ExpressionUUID->"216953a9-6892-4af8-a8c2-aecc1fbc0422"]
}, Open  ]],
Cell[102429, 3022, 174, 3, 28, "Input",ExpressionUUID->"0896f9e5-617a-4f60-96d1-5324fe418b4d"],
Cell[CellGroupData[{
Cell[102628, 3029, 342, 9, 28, "Input",ExpressionUUID->"28990a1e-3489-4b1d-84dc-40ad69dd0b6a"],
Cell[102973, 3040, 315, 8, 32, "Output",ExpressionUUID->"00ce64ed-1b32-492c-bc66-fcb6b8c8c706"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103325, 3053, 202, 3, 28, "Input",ExpressionUUID->"a329ae0a-b4cd-4893-8a95-5aa43a1e565b"],
Cell[CellGroupData[{
Cell[103552, 3060, 245, 5, 22, "Print",ExpressionUUID->"a60b5cd0-3c82-41fb-be6a-cd76ab25e7a5"],
Cell[103800, 3067, 514, 12, 22, "Print",ExpressionUUID->"b6c14aa5-cf89-4a83-a7ea-96987d69c788"],
Cell[104317, 3081, 266, 5, 22, "Print",ExpressionUUID->"464b0845-b103-4370-afda-08ccee65fe41"],
Cell[104586, 3088, 225, 4, 22, "Print",ExpressionUUID->"3b5db491-5923-48c0-ae45-1a0cd217d48e"],
Cell[104814, 3094, 204, 4, 22, "Print",ExpressionUUID->"8eb9341d-d72f-4079-9f89-d5e7539f9c00"],
Cell[105021, 3100, 243, 5, 22, "Print",ExpressionUUID->"b7386585-b9d2-4525-9c39-497d17477271"],
Cell[105267, 3107, 521, 13, 22, "Print",ExpressionUUID->"bc7848b7-020c-4ce4-8035-37ffc05409fb"],
Cell[105791, 3122, 264, 5, 22, "Print",ExpressionUUID->"bc9e2177-776c-416d-8c07-833a4d0aa581"],
Cell[106058, 3129, 243, 5, 22, "Print",ExpressionUUID->"2e527c9b-b5bb-42f9-8b9b-c83347c7baaa"],
Cell[106304, 3136, 398, 7, 40, "Print",ExpressionUUID->"19c23f4c-f724-4ca3-abdc-b60a650a8314"],
Cell[106705, 3145, 243, 5, 22, "Print",ExpressionUUID->"c056e5f6-b154-421a-9d34-96b37b9d257a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106997, 3156, 590, 16, 48, "Input",ExpressionUUID->"3fd7a72a-e2a5-4f51-97fe-cbb5890aa691"],
Cell[CellGroupData[{
Cell[107612, 3176, 696, 16, 22, "Print",ExpressionUUID->"605dc754-9c1b-49c4-81d3-c0481c02aceb"],
Cell[108311, 3194, 611, 13, 22, "Print",ExpressionUUID->"4f54252b-8749-4604-a50f-82d9384a341a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108971, 3213, 327, 7, 28, "Input",ExpressionUUID->"a0f12ab9-6a72-4ecf-8ff3-2b6562339a44"],
Cell[CellGroupData[{
Cell[109323, 3224, 579, 13, 22, "Print",ExpressionUUID->"788e773e-51b0-4331-80f5-79ec2bdc36f5"],
Cell[109905, 3239, 589, 13, 22, "Print",ExpressionUUID->"e5f491f9-917f-49e6-94f8-af70678d47c6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110543, 3258, 318, 8, 28, "Input",ExpressionUUID->"e25d7bad-f606-4d53-a092-67485a002b50"],
Cell[110864, 3268, 1761, 55, 36, "Output",ExpressionUUID->"4af05470-e437-4f86-b9d9-ac21aea095d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112662, 3328, 199, 3, 28, "Input",ExpressionUUID->"9cb19218-c53b-4dc0-985f-295cc6c511b8"],
Cell[112864, 3333, 138123, 2749, 113, "Output",ExpressionUUID->"078c09c7-f598-40af-89a6-2215a60e2130"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251024, 6087, 457, 12, 28, "Input",ExpressionUUID->"cb8b54db-539c-4ba3-a9b3-3127cb6156f9"],
Cell[CellGroupData[{
Cell[251506, 6103, 735, 18, 22, "Print",ExpressionUUID->"ec647431-7e2a-4eb3-b622-21b730e5212d"],
Cell[252244, 6123, 791, 19, 22, "Print",ExpressionUUID->"ea2f4fed-4786-4395-ae02-c4f5c0180a60"],
Cell[253038, 6144, 659, 15, 22, "Print",ExpressionUUID->"ebb90884-dd00-41e9-ac4a-07b59c73feb1"],
Cell[253700, 6161, 785, 19, 22, "Print",ExpressionUUID->"f5c7b5d2-3a82-42b7-b41e-7a48fdc8325e"],
Cell[254488, 6182, 803, 20, 22, "Print",ExpressionUUID->"071c6b4e-3c5c-43b5-9920-db5badf16657"],
Cell[255294, 6204, 829, 20, 22, "Print",ExpressionUUID->"aeda96a3-f2fe-41bc-ad87-a0b1e5ec91d7"],
Cell[256126, 6226, 745, 18, 22, "Print",ExpressionUUID->"11b74bc2-cbcf-4e95-a042-6054d0def41e"],
Cell[256874, 6246, 252, 5, 22, "Print",ExpressionUUID->"41059a76-bdbf-469d-8b3d-bb75e474c304"],
Cell[257129, 6253, 626, 13, 22, "Print",ExpressionUUID->"b55402b1-e073-47a2-bc9b-165389493e70"],
Cell[257758, 6268, 258, 5, 22, "Print",ExpressionUUID->"632f5b94-93a8-4b0f-ad56-6de550ac4ce8"],
Cell[258019, 6275, 759, 18, 22, "Print",ExpressionUUID->"48aa0477-4402-492a-8dd8-5e19c7c03321"],
Cell[258781, 6295, 837, 20, 22, "Print",ExpressionUUID->"94566968-b87a-41ec-850b-4b2204400100"],
Cell[259621, 6317, 755, 18, 22, "Print",ExpressionUUID->"6978ae0a-9c50-4ce2-b596-67b57522454a"],
Cell[260379, 6337, 641, 14, 22, "Print",ExpressionUUID->"d026d5c4-ebc4-47b0-a252-badd88c67fb5"],
Cell[261023, 6353, 387, 9, 22, "Print",ExpressionUUID->"64d47549-91d2-4ddc-9959-690f24868cb9"],
Cell[261413, 6364, 381, 9, 22, "Print",ExpressionUUID->"3126e7e8-2489-4668-a7b7-e58668cc9dfd"],
Cell[261797, 6375, 393, 9, 22, "Print",ExpressionUUID->"f8d3507a-81d0-4384-bec4-ad13ac22da67"],
Cell[262193, 6386, 647, 14, 22, "Print",ExpressionUUID->"ed6a7df7-c80a-426d-b9b4-8ca643f6ccab"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[262889, 6406, 213, 3, 28, "Input",ExpressionUUID->"b30a8e4c-bb31-472f-b344-5d4cbd21e85e"],
Cell[CellGroupData[{
Cell[263127, 6413, 562, 13, 22, "Print",ExpressionUUID->"9530fc2d-7f6f-46c1-a9dc-8ddeecd3521c"],
Cell[263692, 6428, 602, 13, 22, "Print",ExpressionUUID->"c781cb01-e242-41c9-bc25-27c2a30a12db"],
Cell[264297, 6443, 590, 13, 22, "Print",ExpressionUUID->"2e5c7db0-882f-4cb1-baab-c61377f716dd"],
Cell[264890, 6458, 582, 13, 22, "Print",ExpressionUUID->"194393c4-df5e-462d-945d-a757351b9d5c"],
Cell[265475, 6473, 578, 13, 22, "Print",ExpressionUUID->"2f2fc6a7-c438-475c-b825-3bceb2ee8401"],
Cell[266056, 6488, 570, 13, 22, "Print",ExpressionUUID->"599c4b0a-46c1-44b8-a212-b7b530df77b0"],
Cell[266629, 6503, 566, 13, 22, "Print",ExpressionUUID->"09c8467c-f28e-4cf0-988d-45e052839452"],
Cell[267198, 6518, 584, 13, 22, "Print",ExpressionUUID->"be396ff0-f995-4ab1-bd38-751bb2741895"],
Cell[267785, 6533, 563, 13, 22, "Print",ExpressionUUID->"d194375f-8d46-42e5-b541-786945f5b2d7"],
Cell[268351, 6548, 551, 13, 22, "Print",ExpressionUUID->"18cf84da-007f-470b-8a4e-4623c81be253"],
Cell[268905, 6563, 557, 13, 22, "Print",ExpressionUUID->"d91696b5-ebd7-4604-bb25-53466f612b6d"],
Cell[269465, 6578, 573, 13, 22, "Print",ExpressionUUID->"eed8a535-2101-4b95-a798-06c068a76eb9"],
Cell[270041, 6593, 565, 13, 22, "Print",ExpressionUUID->"95700e2b-4120-473d-9415-b04b4e400351"]
}, Open  ]]
}, Open  ]]
}
]
*)

